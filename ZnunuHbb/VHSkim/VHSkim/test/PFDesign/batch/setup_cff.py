# /dev/CMSSW_4_2_0/GRun/V182 (CMSSW_4_2_0_HLT18)

import FWCore.ParameterSet.Config as cms


HLTConfigVersion = cms.PSet(
  tableName = cms.string('/dev/CMSSW_4_2_0/GRun/V182')
)

streams = cms.PSet( 
  A = cms.vstring( 'BTag',
    'Commissioning',
    'Cosmics',
    'DoubleElectron',
    'DoubleMu',
    'ElectronHad',
    'FEDMonitor',
    'HT',
    'HcalHPDNoise',
    'HcalNZS',
    'Jet',
    'LogMonitor',
    'MET',
    'MinimumBias',
    'MuEG',
    'MuHad',
    'MuOnia',
    'MultiJet',
    'Photon',
    'PhotonHad',
    'SingleElectron',
    'SingleMu',
    'Tau',
    'TauPlusX' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcalDT' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  HLTDQM = cms.vstring( 'OnlineHltMonitor' ),
  HLTDQMResults = cms.vstring( 'OnlineHltResults' ),
  HLTMON = cms.vstring( 'OfflineMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  TrackerCalibration = cms.vstring( 'TestEnablesTracker' )
)
datasets = cms.PSet( 
  AlCaP0 = cms.vstring( 'AlCa_EcalEta_v8',
    'AlCa_EcalPi0_v9' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v7' ),
  BTag = cms.vstring( 'HLT_BTagMu_DiJet110_Mu5_v9',
    'HLT_BTagMu_DiJet20_Mu5_v9',
    'HLT_BTagMu_DiJet40_Mu5_v9',
    'HLT_BTagMu_DiJet70_Mu5_v9' ),
  Commissioning = cms.vstring( 'HLT_Activity_Ecal_SC7_v7',
    'HLT_BeamGas_BSC_v4',
    'HLT_BeamGas_HF_v6',
    'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v7',
    'HLT_L1SingleEG12_v3',
    'HLT_L1SingleEG5_v3',
    'HLT_L1SingleJet16_v4',
    'HLT_L1SingleJet36_v4',
    'HLT_L1SingleMuOpen_DT_v4',
    'HLT_L1SingleMuOpen_v4',
    'HLT_L1_Interbunch_BSC_v3',
    'HLT_L1_PreCollisions_v3',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v8' ),
  Cosmics = cms.vstring( 'HLT_BeamHalo_v5',
    'HLT_L1SingleMuOpen_AntiBPTX_v3',
    'HLT_L1TrackerCosmics_v4',
    'HLT_RegionalCosmicTracking_v6' ),
  DoubleElectron = cms.vstring( 'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v2',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFT_v3',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v6',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v5',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele8_CaloIdL_TrkIdVL_v7',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5',
    'HLT_Ele8_v7',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v8' ),
  DoubleMu = cms.vstring( 'HLT_DoubleMu3_v9',
    'HLT_DoubleMu45_v5',
    'HLT_DoubleMu4_Acoplanarity03_v8',
    'HLT_DoubleMu5_Acoplanarity03_v5',
    'HLT_DoubleMu5_IsoMu5_v7',
    'HLT_DoubleMu6_v7',
    'HLT_DoubleMu7_v7',
    'HLT_L1DoubleMu0_v4',
    'HLT_L2DoubleMu0_v7',
    'HLT_L2DoubleMu23_NoVertex_v7',
    'HLT_L2DoubleMu30_NoVertex_v3',
    'HLT_Mu13_Mu8_v6',
    'HLT_Mu17_Mu8_v6',
    'HLT_Mu8_Jet40_v9',
    'HLT_TripleMu5_v8' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v2' ),
  ElectronHad = cms.vstring( 'HLT_DoubleEle8_CaloIdT_TrkIdVL_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass4_HT150_v2',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v2',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R005_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v2',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT25_v3',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v1',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v2',
    'HLT_Ele15_CaloIdVT_TrkIdT_Jet35_Jet25_Deta3_Jet20_v3',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v1',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v4',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_v3',
    'HLT_Ele22_CaloIdVT_TrkIdT_CentralJet30_CentralJet25_v3',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralJet30_v7',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralJet30_v7',
    'HLT_Ele27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v1',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v4',
    'HLT_HT200_DoubleEle5_CaloIdVL_MassJPsi_v2',
    'HLT_HT300_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT40_v5',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v5' ),
  ExpressPhysics = cms.vstring( 'HLT_DoubleEle45_CaloIdL_v3',
    'HLT_DoubleMu45_v5',
    'HLT_DoublePhoton80_v1',
    'HLT_EightJet120_v1',
    'HLT_Ele100_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v2',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7',
    'HLT_Ele65_CaloIdVT_TrkIdT_v3',
    'HLT_HT2000_v2',
    'HLT_Jet370_v6',
    'HLT_Jet800_v1',
    'HLT_MET200_v7',
    'HLT_MET400_v2',
    'HLT_Mu100_v5',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu17_Mu8_v6',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon400_v1',
    'HLT_Photon75_CaloIdVL_IsoL_v7',
    'HLT_ZeroBias_v4' ),
  FEDMonitor = cms.vstring( 'HLT_DTErrors_v2' ),
  HT = cms.vstring( 'HLT_DiJet130_PT130_v6',
    'HLT_DiJet160_PT160_v6',
    'HLT_FatJetMass300_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass350_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass750_DR1p1_Deta2p0_v1',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v1',
    'HLT_HT150_v8',
    'HLT_HT2000_v2',
    'HLT_HT200_AlphaT0p55_v2',
    'HLT_HT200_v8',
    'HLT_HT250_AlphaT0p53_v6',
    'HLT_HT250_AlphaT0p55_v2',
    'HLT_HT250_DoubleDisplacedJet60_PromptTrack_v5',
    'HLT_HT250_DoubleDisplacedJet60_v7',
    'HLT_HT250_MHT100_v2',
    'HLT_HT250_MHT90_v2',
    'HLT_HT250_v8',
    'HLT_HT300_AlphaT0p53_v6',
    'HLT_HT300_AlphaT0p54_v2',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v7',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT75_v7',
    'HLT_HT300_CentralJet30_BTagIP_v6',
    'HLT_HT300_MHT80_v2',
    'HLT_HT300_MHT90_v2',
    'HLT_HT300_PFMHT55_v7',
    'HLT_HT300_v9',
    'HLT_HT350_AlphaT0p52_v2',
    'HLT_HT350_AlphaT0p53_v7',
    'HLT_HT350_MHT70_v2',
    'HLT_HT350_MHT80_v2',
    'HLT_HT350_v8',
    'HLT_HT400_AlphaT0p51_v7',
    'HLT_HT400_AlphaT0p52_v2',
    'HLT_HT400_v8',
    'HLT_HT450_AlphaT0p51_v2',
    'HLT_HT450_AlphaT0p52_v2',
    'HLT_HT450_v8',
    'HLT_HT500_JetPt60_DPhi2p94_v1',
    'HLT_HT500_v8',
    'HLT_HT550_JetPt60_DPhi2p94_v1',
    'HLT_HT550_v8',
    'HLT_HT600_v1',
    'HLT_R014_MR150_v6',
    'HLT_R020_MR150_v6',
    'HLT_R020_MR550_v6',
    'HLT_R023_MR550_v2',
    'HLT_R025_MR150_v6',
    'HLT_R025_MR450_v6',
    'HLT_R029_MR450_v2',
    'HLT_R033_MR350_v6',
    'HLT_R036_MR350_v2',
    'HLT_R038_MR250_v6',
    'HLT_R042_MR250_v2' ),
  HcalHPDNoise = cms.vstring( 'HLT_GlobalRunHPDNoise_v5',
    'HLT_L1Tech_HBHEHO_totalOR_v3',
    'HLT_L1Tech_HCAL_HF_single_channel_v1' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v7',
    'HLT_HcalPhiSym_v7' ),
  Jet = cms.vstring( 'HLT_DiJetAve110_v6',
    'HLT_DiJetAve150_v6',
    'HLT_DiJetAve190_v6',
    'HLT_DiJetAve240_v6',
    'HLT_DiJetAve300_v6',
    'HLT_DiJetAve30_v6',
    'HLT_DiJetAve370_v6',
    'HLT_DiJetAve60_v6',
    'HLT_DiJetAve80_v6',
    'HLT_Jet110_v6',
    'HLT_Jet150_v6',
    'HLT_Jet190_v6',
    'HLT_Jet240_CentralJet30_BTagIP_v2',
    'HLT_Jet240_v6',
    'HLT_Jet270_CentralJet30_BTagIP_v2',
    'HLT_Jet300_v5',
    'HLT_Jet30_v6',
    'HLT_Jet370_NoJetID_v6',
    'HLT_Jet370_v6',
    'HLT_Jet60_v6',
    'HLT_Jet800_v1',
    'HLT_Jet80_v6' ),
  L1Accept = cms.vstring( 'HLT_Physics_NanoDST_v2' ),
  LogMonitor = cms.vstring( 'HLT_LogMonitor_v1' ),
  MET = cms.vstring( 'HLT_CentralJet80_MET100_v7',
    'HLT_CentralJet80_MET160_v7',
    'HLT_CentralJet80_MET65_v7',
    'HLT_CentralJet80_MET80_v6',
    'HLT_DiCentralJet20_BTagIP_MET65_v6',
    'HLT_DiCentralJet20_MET80_v5',
    'HLT_DiJet60_MET45_v7',
    'HLT_L2Mu60_1Hit_MET40_v5',
    'HLT_L2Mu60_1Hit_MET60_v5',
    'HLT_MET100_HBHENoiseFiltered_v5',
    'HLT_MET100_v7',
    'HLT_MET120_HBHENoiseFiltered_v5',
    'HLT_MET120_v7',
    'HLT_MET200_HBHENoiseFiltered_v5',
    'HLT_MET200_v7',
    'HLT_MET400_v2',
    'HLT_MET65_HBHENoiseFiltered_v4',
    'HLT_MET65_v4',
    'HLT_PFMHT150_v11' ),
  MinimumBias = cms.vstring( 'HLT_JetE30_NoBPTX3BX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_v6',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v3',
    'HLT_Physics_v2',
    'HLT_PixelTracks_Multiplicity100_v6',
    'HLT_PixelTracks_Multiplicity80_v6',
    'HLT_Random_v1',
    'HLT_ZeroBias_v4' ),
  MuEG = cms.vstring( 'HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v3',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v9',
    'HLT_Mu15_Photon20_CaloIdL_v9',
    'HLT_Mu17_Ele8_CaloIdL_v8',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v3',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v3',
    'HLT_Mu8_Ele17_CaloIdL_v8',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v8' ),
  MuHad = cms.vstring( 'HLT_DoubleMu3_HT150_v7',
    'HLT_DoubleMu3_HT200_v10',
    'HLT_DoubleMu3_Mass4_HT150_v3',
    'HLT_HT250_Mu15_PFMHT20_v7',
    'HLT_HT250_Mu15_PFMHT40_v3',
    'HLT_HT300_Mu5_PFMHT40_v7',
    'HLT_HT350_Mu5_PFMHT45_v7',
    'HLT_IsoMu17_CentralJet30_BTagIP_v9',
    'HLT_IsoMu17_CentralJet30_v5',
    'HLT_IsoMu17_DiCentralJet30_v5',
    'HLT_IsoMu17_QuadCentralJet30_v5',
    'HLT_IsoMu17_TriCentralJet30_v5',
    'HLT_IsoMu20_DiCentralJet34_v2',
    'HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2',
    'HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v3',
    'HLT_Mu12_DiCentralJet30_BTagIP3D_v5',
    'HLT_Mu17_CentralJet30_BTagIP_v9',
    'HLT_Mu17_CentralJet30_v10',
    'HLT_Mu17_DiCentralJet30_v10',
    'HLT_Mu17_QuadCentralJet30_v5',
    'HLT_Mu17_TriCentralJet30_v10',
    'HLT_Mu30_HT200_v3',
    'HLT_Mu3_DiJet30_v6',
    'HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v6',
    'HLT_Mu3_QuadJet30_v6',
    'HLT_Mu3_TriJet30_v6',
    'HLT_Mu40_HT200_v3',
    'HLT_Mu8_R005_MR200_v7',
    'HLT_Mu8_R025_MR200_v7',
    'HLT_Mu8_R029_MR200_v3' ),
  MuOnia = cms.vstring( 'HLT_Dimuon0_Jpsi_Muon_v6',
    'HLT_Dimuon0_Jpsi_NoVertexing_v2',
    'HLT_Dimuon0_Jpsi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v6',
    'HLT_Dimuon0_Upsilon_v5',
    'HLT_Dimuon10_Jpsi_Barrel_v5',
    'HLT_Dimuon4_Bs_Barrel_v7',
    'HLT_Dimuon5_Upsilon_Barrel_v5',
    'HLT_Dimuon6_Bs_v6',
    'HLT_Dimuon7_Jpsi_X_Barrel_v5',
    'HLT_Dimuon7_PsiPrime_v5',
    'HLT_DoubleMu3p5_Jpsi_Displaced_v2',
    'HLT_DoubleMu4_LowMass_Displaced_v2',
    'HLT_Mu5_L2Mu2_Jpsi_v8',
    'HLT_Mu5_Track2_Jpsi_v8',
    'HLT_Mu7_Track7_Jpsi_v9' ),
  MultiJet = cms.vstring( 'HLT_60Jet10_v1',
    'HLT_70Jet10_v1',
    'HLT_70Jet13_v1',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v2',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v1',
    'HLT_DoubleJet30_ForwardBackward_v7',
    'HLT_DoubleJet60_ForwardBackward_v7',
    'HLT_DoubleJet70_ForwardBackward_v7',
    'HLT_DoubleJet80_ForwardBackward_v7',
    'HLT_EightJet120_v1',
    'HLT_ExclDiJet60_HFAND_v6',
    'HLT_ExclDiJet60_HFOR_v6',
    'HLT_L1DoubleJet36Central_v4',
    'HLT_L1ETM30_v4',
    'HLT_L1MultiJet_v4',
    'HLT_QuadJet40_IsoPFTau40_v11',
    'HLT_QuadJet40_v7',
    'HLT_QuadJet45_IsoPFTau45_v6',
    'HLT_QuadJet50_Jet40_Jet30_v3',
    'HLT_QuadJet60_v6',
    'HLT_QuadJet70_v6' ),
  OfflineMonitor = ( cms.vstring( 'AlCa_EcalEta_v8',
    'AlCa_EcalPhiSym_v7',
    'AlCa_EcalPi0_v9',
    'AlCa_RPCMuonNoHits_v6',
    'AlCa_RPCMuonNoTriggers_v6',
    'AlCa_RPCMuonNormalisation_v6',
    'HLT_60Jet10_v1',
    'HLT_70Jet10_v1',
    'HLT_70Jet13_v1',
    'HLT_Activity_Ecal_SC7_v7',
    'HLT_BTagMu_DiJet110_Mu5_v9',
    'HLT_BTagMu_DiJet20_Mu5_v9',
    'HLT_BTagMu_DiJet40_Mu5_v9',
    'HLT_BTagMu_DiJet70_Mu5_v9',
    'HLT_BeamGas_BSC_v4',
    'HLT_BeamGas_HF_v6',
    'HLT_BeamHalo_v5',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v2',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v1',
    'HLT_CentralJet80_MET100_v7',
    'HLT_CentralJet80_MET160_v7',
    'HLT_CentralJet80_MET65_v7',
    'HLT_CentralJet80_MET80_v6',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v6',
    'HLT_DiCentralJet20_MET80_v5',
    'HLT_DiJet130_PT130_v6',
    'HLT_DiJet160_PT160_v6',
    'HLT_DiJet60_MET45_v7',
    'HLT_DiJetAve110_v6',
    'HLT_DiJetAve150_v6',
    'HLT_DiJetAve190_v6',
    'HLT_DiJetAve240_v6',
    'HLT_DiJetAve300_v6',
    'HLT_DiJetAve30_v6',
    'HLT_DiJetAve370_v6',
    'HLT_DiJetAve60_v6',
    'HLT_DiJetAve80_v6',
    'HLT_Dimuon0_Jpsi_Muon_v6',
    'HLT_Dimuon0_Jpsi_NoVertexing_v2',
    'HLT_Dimuon0_Jpsi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v6',
    'HLT_Dimuon0_Upsilon_v5',
    'HLT_Dimuon10_Jpsi_Barrel_v5',
    'HLT_Dimuon4_Bs_Barrel_v7',
    'HLT_Dimuon5_Upsilon_Barrel_v5',
    'HLT_Dimuon6_Bs_v6',
    'HLT_Dimuon7_Jpsi_X_Barrel_v5',
    'HLT_Dimuon7_PsiPrime_v5',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleEle33_CaloIdL_v4',
    'HLT_DoubleEle33_v4',
    'HLT_DoubleEle45_CaloIdL_v3',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass4_HT150_v2',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v2',
    'HLT_DoubleJet30_ForwardBackward_v7',
    'HLT_DoubleJet60_ForwardBackward_v7',
    'HLT_DoubleJet70_ForwardBackward_v7',
    'HLT_DoubleJet80_ForwardBackward_v7',
    'HLT_DoubleMu3_HT150_v7',
    'HLT_DoubleMu3_HT200_v10',
    'HLT_DoubleMu3_Mass4_HT150_v3',
    'HLT_DoubleMu3_v9',
    'HLT_DoubleMu3p5_Jpsi_Displaced_v2',
    'HLT_DoubleMu45_v5',
    'HLT_DoubleMu4_Acoplanarity03_v8',
    'HLT_DoubleMu4_LowMass_Displaced_v2',
    'HLT_DoubleMu5_Acoplanarity03_v5',
    'HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v3',
    'HLT_DoubleMu5_IsoMu5_v7',
    'HLT_DoubleMu6_v7',
    'HLT_DoubleMu7_v7',
    'HLT_DoublePhoton33_HEVT_v3',
    'HLT_DoublePhoton38_HEVT_v2',
    'HLT_DoublePhoton40_MR150_v5',
    'HLT_DoublePhoton40_R014_MR150_v5',
    'HLT_DoublePhoton5_IsoVL_CEP_v6',
    'HLT_DoublePhoton60_v3',
    'HLT_DoublePhoton80_v1',
    'HLT_EightJet120_v1',
    'HLT_Ele100_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v2',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R005_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v2',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT25_v3',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v1',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v7',
    'HLT_Ele15_CaloIdVT_TrkIdT_Jet35_Jet25_Deta3_Jet20_v3',
    'HLT_Ele15_CaloIdVT_TrkIdT_TightIsoPFTau20_v2',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFT_v3',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v6',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7',
    'HLT_Ele18_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v1',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v4',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_v3',
    'HLT_Ele22_CaloIdVT_TrkIdT_CentralJet30_CentralJet25_v3',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralJet30_v7',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralJet30_v7',
    'HLT_Ele27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v1',
    'HLT_Ele27_WP80_PFMT50_v3',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v5',
    'HLT_Ele32_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v6',
    'HLT_Ele32_WP70_PFMT50_v3',
    'HLT_Ele52_CaloIdVT_TrkIdT_v4',
    'HLT_Ele65_CaloIdVT_TrkIdT_v3',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele8_CaloIdL_TrkIdVL_v7',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v4',
    'HLT_Ele8_v7',
    'HLT_ExclDiJet60_HFAND_v6',
    'HLT_ExclDiJet60_HFOR_v6',
    'HLT_FatJetMass300_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass350_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass750_DR1p1_Deta2p0_v1',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v1',
    'HLT_GlobalRunHPDNoise_v5',
    'HLT_HT150_v8',
    'HLT_HT2000_v2',
    'HLT_HT200_AlphaT0p55_v2',
    'HLT_HT200_DoubleEle5_CaloIdVL_MassJPsi_v2',
    'HLT_HT200_v8',
    'HLT_HT250_AlphaT0p53_v6',
    'HLT_HT250_AlphaT0p55_v2',
    'HLT_HT250_DoubleDisplacedJet60_PromptTrack_v5',
    'HLT_HT250_DoubleDisplacedJet60_v7',
    'HLT_HT250_MHT100_v2',
    'HLT_HT250_MHT90_v2',
    'HLT_HT250_Mu15_PFMHT20_v7',
    'HLT_HT250_Mu15_PFMHT40_v3',
    'HLT_HT250_v8',
    'HLT_HT300_AlphaT0p53_v6',
    'HLT_HT300_AlphaT0p54_v2',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v7',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT75_v7',
    'HLT_HT300_CentralJet30_BTagIP_v6',
    'HLT_HT300_DoubleIsoPFTau10_Trk3_PFMHT40_v7',
    'HLT_HT300_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT40_v5',
    'HLT_HT300_MHT80_v2',
    'HLT_HT300_MHT90_v2',
    'HLT_HT300_Mu5_PFMHT40_v7',
    'HLT_HT300_PFMHT55_v7',
    'HLT_HT300_v9',
    'HLT_HT350_AlphaT0p52_v2',
    'HLT_HT350_AlphaT0p53_v7',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v7',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v5',
    'HLT_HT350_MHT70_v2',
    'HLT_HT350_MHT80_v2',
    'HLT_HT350_Mu5_PFMHT45_v7',
    'HLT_HT350_v8',
    'HLT_HT400_AlphaT0p51_v7',
    'HLT_HT400_AlphaT0p52_v2',
    'HLT_HT400_v8',
    'HLT_HT450_AlphaT0p51_v2',
    'HLT_HT450_AlphaT0p52_v2',
    'HLT_HT450_v8',
    'HLT_HT500_JetPt60_DPhi2p94_v1',
    'HLT_HT500_v8',
    'HLT_HT550_JetPt60_DPhi2p94_v1',
    'HLT_HT550_v8',
    'HLT_HT600_v1',
    'HLT_HcalNZS_v7',
    'HLT_HcalPhiSym_v7',
    'HLT_IsoMu12_v9',
    'HLT_IsoMu15_LooseIsoPFTau15_v8',
    'HLT_IsoMu15_LooseIsoPFTau20_v6',
    'HLT_IsoMu15_TightIsoPFTau20_v6',
    'HLT_IsoMu15_v13',
    'HLT_IsoMu17_CentralJet30_BTagIP_v9',
    'HLT_IsoMu17_CentralJet30_v5',
    'HLT_IsoMu17_DiCentralJet30_v5',
    'HLT_IsoMu17_QuadCentralJet30_v5',
    'HLT_IsoMu17_TriCentralJet30_v5',
    'HLT_IsoMu17_v13',
    'HLT_IsoMu20_DiCentralJet34_v2',
    'HLT_IsoMu20_v8',
    'HLT_IsoMu24_v8',
    'HLT_IsoMu30_v8',
    'HLT_IsoPFTau35_Trk20_MET60_v6',
    'HLT_IsoPFTau35_Trk20_MET70_v2',
    'HLT_IsoPFTau35_Trk20_v6',
    'HLT_IsoPFTau40_IsoPFTau30_Trk5_eta2p1_v2',
    'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v7',
    'HLT_Jet110_v6',
    'HLT_Jet150_v6',
    'HLT_Jet190_v6',
    'HLT_Jet240_CentralJet30_BTagIP_v2',
    'HLT_Jet240_v6',
    'HLT_Jet270_CentralJet30_BTagIP_v2',
    'HLT_Jet300_v5',
    'HLT_Jet30_v6',
    'HLT_Jet370_NoJetID_v6',
    'HLT_Jet370_v6',
    'HLT_Jet60_v6',
    'HLT_Jet800_v1',
    'HLT_Jet80_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_v6',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v3',
    'HLT_L1DoubleJet36Central_v4',
    'HLT_L1DoubleMu0_v4',
    'HLT_L1ETM30_v4',
    'HLT_L1MultiJet_v4',
    'HLT_L1SingleEG12_v3',
    'HLT_L1SingleEG5_v3',
    'HLT_L1SingleJet16_v4',
    'HLT_L1SingleJet36_v4',
    'HLT_L1SingleMu10_v4',
    'HLT_L1SingleMu20_v4',
    'HLT_L1SingleMuOpen_AntiBPTX_v3',
    'HLT_L1SingleMuOpen_DT_v4',
    'HLT_L1SingleMuOpen_v4',
    'HLT_L1Tech_HBHEHO_totalOR_v3',
    'HLT_L1Tech_HCAL_HF_single_channel_v1',
    'HLT_L1TrackerCosmics_v4',
    'HLT_L1_Interbunch_BSC_v3',
    'HLT_L1_PreCollisions_v3',
    'HLT_L2DoubleMu0_v7',
    'HLT_L2DoubleMu23_NoVertex_v7',
    'HLT_L2DoubleMu30_NoVertex_v3',
    'HLT_L2Mu10_v6',
    'HLT_L2Mu20_v6',
    'HLT_L2Mu60_1Hit_MET40_v5',
    'HLT_L2Mu60_1Hit_MET60_v5',
    'HLT_LogMonitor_v1',
    'HLT_MET100_HBHENoiseFiltered_v5',
    'HLT_MET100_v7',
    'HLT_MET120_HBHENoiseFiltered_v5')+cms.vstring( 'HLT_MET120_v7',
    'HLT_MET200_HBHENoiseFiltered_v5',
    'HLT_MET200_v7',
    'HLT_MET400_v2',
    'HLT_MET65_HBHENoiseFiltered_v4',
    'HLT_MET65_v4',
    'HLT_Mu100_v5',
    'HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2',
    'HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v3',
    'HLT_Mu12_DiCentralJet30_BTagIP3D_v5',
    'HLT_Mu12_v7',
    'HLT_Mu13_Mu8_v6',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v9',
    'HLT_Mu15_LooseIsoPFTau15_v8',
    'HLT_Mu15_Photon20_CaloIdL_v9',
    'HLT_Mu15_v8',
    'HLT_Mu17_CentralJet30_BTagIP_v9',
    'HLT_Mu17_CentralJet30_v10',
    'HLT_Mu17_DiCentralJet30_v10',
    'HLT_Mu17_Ele8_CaloIdL_v8',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu17_Mu8_v6',
    'HLT_Mu17_QuadCentralJet30_v5',
    'HLT_Mu17_TriCentralJet30_v10',
    'HLT_Mu20_v7',
    'HLT_Mu24_v7',
    'HLT_Mu30_HT200_v3',
    'HLT_Mu30_v7',
    'HLT_Mu3_DiJet30_v6',
    'HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2',
    'HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v6',
    'HLT_Mu3_QuadJet30_v6',
    'HLT_Mu3_TriJet30_v6',
    'HLT_Mu3_v9',
    'HLT_Mu40_HT200_v3',
    'HLT_Mu40_v5',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v3',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v3',
    'HLT_Mu5_L2Mu2_Jpsi_v8',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v8',
    'HLT_Mu5_Track2_Jpsi_v8',
    'HLT_Mu5_v9',
    'HLT_Mu60_v2',
    'HLT_Mu7_Track7_Jpsi_v9',
    'HLT_Mu8_Ele17_CaloIdL_v8',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu8_Jet40_v9',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v8',
    'HLT_Mu8_R005_MR200_v7',
    'HLT_Mu8_R025_MR200_v7',
    'HLT_Mu8_R029_MR200_v3',
    'HLT_Mu8_v7',
    'HLT_PFMHT150_v11',
    'HLT_Photon135_v1',
    'HLT_Photon200_NoHE_v3',
    'HLT_Photon20_CaloIdVL_IsoL_v6',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Photon20_R9Id_Photon18_R9Id_v6',
    'HLT_Photon225_NoHE_v1',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_CaloIdL_IsoVL_v7',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_R9Id_v6',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_v7',
    'HLT_Photon26_IsoVL_Photon18_IsoVL_v7',
    'HLT_Photon26_IsoVL_Photon18_v7',
    'HLT_Photon26_Photon18_v6',
    'HLT_Photon26_R9Id_Photon18_CaloIdL_IsoVL_v6',
    'HLT_Photon26_R9Id_Photon18_R9Id_v3',
    'HLT_Photon30_CaloIdVL_IsoL_v7',
    'HLT_Photon30_CaloIdVL_v6',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v1',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v2',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v4',
    'HLT_Photon36_CaloIdL_Photon22_CaloIdL_v5',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v1',
    'HLT_Photon36_IsoVL_Photon22_v4',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_R9Id_Photon22_R9Id_v2',
    'HLT_Photon400_v1',
    'HLT_Photon40_CaloIdL_Photon28_CaloIdL_v3',
    'HLT_Photon40_CaloIdL_R005_MR150_v4',
    'HLT_Photon40_CaloIdL_R014_MR500_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v2',
    'HLT_Photon40_CaloIdL_R020_MR350_v2',
    'HLT_Photon40_CaloIdL_R023_MR350_v2',
    'HLT_Photon40_CaloIdL_R025_MR250_v2',
    'HLT_Photon40_CaloIdL_R029_MR250_v2',
    'HLT_Photon40_CaloIdL_R038_MR200_v2',
    'HLT_Photon40_CaloIdL_R042_MR200_v2',
    'HLT_Photon44_CaloIdL_Photon34_CaloIdL_v1',
    'HLT_Photon48_CaloIdL_Photon38_CaloIdL_v1',
    'HLT_Photon50_CaloIdVL_IsoL_v6',
    'HLT_Photon50_CaloIdVL_v3',
    'HLT_Photon70_CaloIdL_HT350_v7',
    'HLT_Photon70_CaloIdL_HT400_v2',
    'HLT_Photon70_CaloIdL_MHT70_v7',
    'HLT_Photon70_CaloIdL_MHT90_v2',
    'HLT_Photon75_CaloIdVL_IsoL_v7',
    'HLT_Photon75_CaloIdVL_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v4',
    'HLT_Photon90_CaloIdVL_v3',
    'HLT_Physics_v2',
    'HLT_PixelTracks_Multiplicity100_v6',
    'HLT_PixelTracks_Multiplicity80_v6',
    'HLT_QuadJet40_IsoPFTau40_v11',
    'HLT_QuadJet40_v7',
    'HLT_QuadJet45_IsoPFTau45_v6',
    'HLT_QuadJet50_Jet40_Jet30_v3',
    'HLT_QuadJet60_v6',
    'HLT_QuadJet70_v6',
    'HLT_R014_MR150_v6',
    'HLT_R020_MR150_v6',
    'HLT_R020_MR550_v6',
    'HLT_R023_MR550_v2',
    'HLT_R025_MR150_v6',
    'HLT_R025_MR450_v6',
    'HLT_R029_MR450_v2',
    'HLT_R033_MR350_v6',
    'HLT_R036_MR350_v2',
    'HLT_R038_MR250_v6',
    'HLT_R042_MR250_v2',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v6',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v8',
    'HLT_TripleMu5_v8',
    'HLT_ZeroBias_v4') ),
  OnlineHltMonitor = ( cms.vstring( 'AlCa_EcalEta_v8',
    'AlCa_EcalPhiSym_v7',
    'AlCa_EcalPi0_v9',
    'AlCa_RPCMuonNoHits_v6',
    'AlCa_RPCMuonNoTriggers_v6',
    'AlCa_RPCMuonNormalisation_v6',
    'HLT_60Jet10_v1',
    'HLT_70Jet10_v1',
    'HLT_70Jet13_v1',
    'HLT_Activity_Ecal_SC7_v7',
    'HLT_BTagMu_DiJet110_Mu5_v9',
    'HLT_BTagMu_DiJet20_Mu5_v9',
    'HLT_BTagMu_DiJet40_Mu5_v9',
    'HLT_BTagMu_DiJet70_Mu5_v9',
    'HLT_BeamGas_BSC_v4',
    'HLT_BeamGas_HF_v6',
    'HLT_BeamHalo_v5',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v2',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v1',
    'HLT_CentralJet80_MET100_v7',
    'HLT_CentralJet80_MET160_v7',
    'HLT_CentralJet80_MET65_v7',
    'HLT_CentralJet80_MET80_v6',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v6',
    'HLT_DiCentralJet20_MET80_v5',
    'HLT_DiJet130_PT130_v6',
    'HLT_DiJet160_PT160_v6',
    'HLT_DiJet60_MET45_v7',
    'HLT_DiJetAve110_v6',
    'HLT_DiJetAve150_v6',
    'HLT_DiJetAve190_v6',
    'HLT_DiJetAve240_v6',
    'HLT_DiJetAve300_v6',
    'HLT_DiJetAve30_v6',
    'HLT_DiJetAve370_v6',
    'HLT_DiJetAve60_v6',
    'HLT_DiJetAve80_v6',
    'HLT_Dimuon0_Jpsi_Muon_v6',
    'HLT_Dimuon0_Jpsi_NoVertexing_v2',
    'HLT_Dimuon0_Jpsi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v6',
    'HLT_Dimuon0_Upsilon_v5',
    'HLT_Dimuon10_Jpsi_Barrel_v5',
    'HLT_Dimuon4_Bs_Barrel_v7',
    'HLT_Dimuon5_Upsilon_Barrel_v5',
    'HLT_Dimuon6_Bs_v6',
    'HLT_Dimuon7_Jpsi_X_Barrel_v5',
    'HLT_Dimuon7_PsiPrime_v5',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleEle33_CaloIdL_v4',
    'HLT_DoubleEle33_v4',
    'HLT_DoubleEle45_CaloIdL_v3',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass4_HT150_v2',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v2',
    'HLT_DoubleJet30_ForwardBackward_v7',
    'HLT_DoubleJet60_ForwardBackward_v7',
    'HLT_DoubleJet70_ForwardBackward_v7',
    'HLT_DoubleJet80_ForwardBackward_v7',
    'HLT_DoubleMu3_HT150_v7',
    'HLT_DoubleMu3_HT200_v10',
    'HLT_DoubleMu3_Mass4_HT150_v3',
    'HLT_DoubleMu3_v9',
    'HLT_DoubleMu3p5_Jpsi_Displaced_v2',
    'HLT_DoubleMu45_v5',
    'HLT_DoubleMu4_Acoplanarity03_v8',
    'HLT_DoubleMu4_LowMass_Displaced_v2',
    'HLT_DoubleMu5_Acoplanarity03_v5',
    'HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v3',
    'HLT_DoubleMu5_IsoMu5_v7',
    'HLT_DoubleMu6_v7',
    'HLT_DoubleMu7_v7',
    'HLT_DoublePhoton33_HEVT_v3',
    'HLT_DoublePhoton38_HEVT_v2',
    'HLT_DoublePhoton40_MR150_v5',
    'HLT_DoublePhoton40_R014_MR150_v5',
    'HLT_DoublePhoton5_IsoVL_CEP_v6',
    'HLT_DoublePhoton60_v3',
    'HLT_DoublePhoton80_v1',
    'HLT_EightJet120_v1',
    'HLT_Ele100_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v2',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R005_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v2',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT25_v3',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v1',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v7',
    'HLT_Ele15_CaloIdVT_TrkIdT_Jet35_Jet25_Deta3_Jet20_v3',
    'HLT_Ele15_CaloIdVT_TrkIdT_TightIsoPFTau20_v2',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFT_v3',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v6',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7',
    'HLT_Ele18_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v1',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v4',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_v3',
    'HLT_Ele22_CaloIdVT_TrkIdT_CentralJet30_CentralJet25_v3',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralJet30_v7',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralJet30_v7',
    'HLT_Ele27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v1',
    'HLT_Ele27_WP80_PFMT50_v3',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v5',
    'HLT_Ele32_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v6',
    'HLT_Ele32_WP70_PFMT50_v3',
    'HLT_Ele52_CaloIdVT_TrkIdT_v4',
    'HLT_Ele65_CaloIdVT_TrkIdT_v3',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele8_CaloIdL_TrkIdVL_v7',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v4',
    'HLT_Ele8_v7',
    'HLT_ExclDiJet60_HFAND_v6',
    'HLT_ExclDiJet60_HFOR_v6',
    'HLT_FatJetMass300_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass350_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass750_DR1p1_Deta2p0_v1',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v1',
    'HLT_GlobalRunHPDNoise_v5',
    'HLT_HT150_v8',
    'HLT_HT2000_v2',
    'HLT_HT200_AlphaT0p55_v2',
    'HLT_HT200_DoubleEle5_CaloIdVL_MassJPsi_v2',
    'HLT_HT200_v8',
    'HLT_HT250_AlphaT0p53_v6',
    'HLT_HT250_AlphaT0p55_v2',
    'HLT_HT250_DoubleDisplacedJet60_PromptTrack_v5',
    'HLT_HT250_DoubleDisplacedJet60_v7',
    'HLT_HT250_MHT100_v2',
    'HLT_HT250_MHT90_v2',
    'HLT_HT250_Mu15_PFMHT20_v7',
    'HLT_HT250_Mu15_PFMHT40_v3',
    'HLT_HT250_v8',
    'HLT_HT300_AlphaT0p53_v6',
    'HLT_HT300_AlphaT0p54_v2',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v7',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT75_v7',
    'HLT_HT300_CentralJet30_BTagIP_v6',
    'HLT_HT300_DoubleIsoPFTau10_Trk3_PFMHT40_v7',
    'HLT_HT300_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT40_v5',
    'HLT_HT300_MHT80_v2',
    'HLT_HT300_MHT90_v2',
    'HLT_HT300_Mu5_PFMHT40_v7',
    'HLT_HT300_PFMHT55_v7',
    'HLT_HT300_v9',
    'HLT_HT350_AlphaT0p52_v2',
    'HLT_HT350_AlphaT0p53_v7',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v7',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v5',
    'HLT_HT350_MHT70_v2',
    'HLT_HT350_MHT80_v2',
    'HLT_HT350_Mu5_PFMHT45_v7',
    'HLT_HT350_v8',
    'HLT_HT400_AlphaT0p51_v7',
    'HLT_HT400_AlphaT0p52_v2',
    'HLT_HT400_v8',
    'HLT_HT450_AlphaT0p51_v2',
    'HLT_HT450_AlphaT0p52_v2',
    'HLT_HT450_v8',
    'HLT_HT500_JetPt60_DPhi2p94_v1',
    'HLT_HT500_v8',
    'HLT_HT550_JetPt60_DPhi2p94_v1',
    'HLT_HT550_v8',
    'HLT_HT600_v1',
    'HLT_HcalNZS_v7',
    'HLT_HcalPhiSym_v7',
    'HLT_IsoMu12_v9',
    'HLT_IsoMu15_LooseIsoPFTau15_v8',
    'HLT_IsoMu15_LooseIsoPFTau20_v6',
    'HLT_IsoMu15_TightIsoPFTau20_v6',
    'HLT_IsoMu15_v13',
    'HLT_IsoMu17_CentralJet30_BTagIP_v9',
    'HLT_IsoMu17_CentralJet30_v5',
    'HLT_IsoMu17_DiCentralJet30_v5',
    'HLT_IsoMu17_QuadCentralJet30_v5',
    'HLT_IsoMu17_TriCentralJet30_v5',
    'HLT_IsoMu17_v13',
    'HLT_IsoMu20_DiCentralJet34_v2',
    'HLT_IsoMu20_v8',
    'HLT_IsoMu24_v8',
    'HLT_IsoMu30_v8',
    'HLT_IsoPFTau35_Trk20_MET60_v6',
    'HLT_IsoPFTau35_Trk20_MET70_v2',
    'HLT_IsoPFTau35_Trk20_v6',
    'HLT_IsoPFTau40_IsoPFTau30_Trk5_eta2p1_v2',
    'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v7',
    'HLT_Jet110_v6',
    'HLT_Jet150_v6',
    'HLT_Jet190_v6',
    'HLT_Jet240_CentralJet30_BTagIP_v2',
    'HLT_Jet240_v6',
    'HLT_Jet270_CentralJet30_BTagIP_v2',
    'HLT_Jet300_v5',
    'HLT_Jet30_v6',
    'HLT_Jet370_NoJetID_v6',
    'HLT_Jet370_v6',
    'HLT_Jet60_v6',
    'HLT_Jet800_v1',
    'HLT_Jet80_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_v6',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v3',
    'HLT_L1DoubleJet36Central_v4',
    'HLT_L1DoubleMu0_v4',
    'HLT_L1ETM30_v4',
    'HLT_L1MultiJet_v4',
    'HLT_L1SingleEG12_v3',
    'HLT_L1SingleEG5_v3',
    'HLT_L1SingleJet16_v4',
    'HLT_L1SingleJet36_v4',
    'HLT_L1SingleMu10_v4',
    'HLT_L1SingleMu20_v4',
    'HLT_L1SingleMuOpen_AntiBPTX_v3',
    'HLT_L1SingleMuOpen_DT_v4',
    'HLT_L1SingleMuOpen_v4',
    'HLT_L1Tech_HBHEHO_totalOR_v3',
    'HLT_L1Tech_HCAL_HF_single_channel_v1',
    'HLT_L1TrackerCosmics_v4',
    'HLT_L1_Interbunch_BSC_v3',
    'HLT_L1_PreCollisions_v3',
    'HLT_L2DoubleMu0_v7',
    'HLT_L2DoubleMu23_NoVertex_v7',
    'HLT_L2DoubleMu30_NoVertex_v3',
    'HLT_L2Mu10_v6',
    'HLT_L2Mu20_v6',
    'HLT_L2Mu60_1Hit_MET40_v5',
    'HLT_L2Mu60_1Hit_MET60_v5',
    'HLT_LogMonitor_v1',
    'HLT_MET100_HBHENoiseFiltered_v5',
    'HLT_MET100_v7',
    'HLT_MET120_HBHENoiseFiltered_v5')+cms.vstring( 'HLT_MET120_v7',
    'HLT_MET200_HBHENoiseFiltered_v5',
    'HLT_MET200_v7',
    'HLT_MET400_v2',
    'HLT_MET65_HBHENoiseFiltered_v4',
    'HLT_MET65_v4',
    'HLT_Mu100_v5',
    'HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2',
    'HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v3',
    'HLT_Mu12_DiCentralJet30_BTagIP3D_v5',
    'HLT_Mu12_v7',
    'HLT_Mu13_Mu8_v6',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v9',
    'HLT_Mu15_LooseIsoPFTau15_v8',
    'HLT_Mu15_Photon20_CaloIdL_v9',
    'HLT_Mu15_v8',
    'HLT_Mu17_CentralJet30_BTagIP_v9',
    'HLT_Mu17_CentralJet30_v10',
    'HLT_Mu17_DiCentralJet30_v10',
    'HLT_Mu17_Ele8_CaloIdL_v8',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu17_Mu8_v6',
    'HLT_Mu17_QuadCentralJet30_v5',
    'HLT_Mu17_TriCentralJet30_v10',
    'HLT_Mu20_v7',
    'HLT_Mu24_v7',
    'HLT_Mu30_HT200_v3',
    'HLT_Mu30_v7',
    'HLT_Mu3_DiJet30_v6',
    'HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2',
    'HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v6',
    'HLT_Mu3_QuadJet30_v6',
    'HLT_Mu3_TriJet30_v6',
    'HLT_Mu3_v9',
    'HLT_Mu40_HT200_v3',
    'HLT_Mu40_v5',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v3',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v3',
    'HLT_Mu5_L2Mu2_Jpsi_v8',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v8',
    'HLT_Mu5_Track2_Jpsi_v8',
    'HLT_Mu5_v9',
    'HLT_Mu60_v2',
    'HLT_Mu7_Track7_Jpsi_v9',
    'HLT_Mu8_Ele17_CaloIdL_v8',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu8_Jet40_v9',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v8',
    'HLT_Mu8_R005_MR200_v7',
    'HLT_Mu8_R025_MR200_v7',
    'HLT_Mu8_R029_MR200_v3',
    'HLT_Mu8_v7',
    'HLT_PFMHT150_v11',
    'HLT_Photon135_v1',
    'HLT_Photon200_NoHE_v3',
    'HLT_Photon20_CaloIdVL_IsoL_v6',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Photon20_R9Id_Photon18_R9Id_v6',
    'HLT_Photon225_NoHE_v1',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_CaloIdL_IsoVL_v7',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_R9Id_v6',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_v7',
    'HLT_Photon26_IsoVL_Photon18_IsoVL_v7',
    'HLT_Photon26_IsoVL_Photon18_v7',
    'HLT_Photon26_Photon18_v6',
    'HLT_Photon26_R9Id_Photon18_CaloIdL_IsoVL_v6',
    'HLT_Photon26_R9Id_Photon18_R9Id_v3',
    'HLT_Photon30_CaloIdVL_IsoL_v7',
    'HLT_Photon30_CaloIdVL_v6',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v1',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v2',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v4',
    'HLT_Photon36_CaloIdL_Photon22_CaloIdL_v5',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v1',
    'HLT_Photon36_IsoVL_Photon22_v4',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_R9Id_Photon22_R9Id_v2',
    'HLT_Photon400_v1',
    'HLT_Photon40_CaloIdL_Photon28_CaloIdL_v3',
    'HLT_Photon40_CaloIdL_R005_MR150_v4',
    'HLT_Photon40_CaloIdL_R014_MR500_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v2',
    'HLT_Photon40_CaloIdL_R020_MR350_v2',
    'HLT_Photon40_CaloIdL_R023_MR350_v2',
    'HLT_Photon40_CaloIdL_R025_MR250_v2',
    'HLT_Photon40_CaloIdL_R029_MR250_v2',
    'HLT_Photon40_CaloIdL_R038_MR200_v2',
    'HLT_Photon40_CaloIdL_R042_MR200_v2',
    'HLT_Photon44_CaloIdL_Photon34_CaloIdL_v1',
    'HLT_Photon48_CaloIdL_Photon38_CaloIdL_v1',
    'HLT_Photon50_CaloIdVL_IsoL_v6',
    'HLT_Photon50_CaloIdVL_v3',
    'HLT_Photon70_CaloIdL_HT350_v7',
    'HLT_Photon70_CaloIdL_HT400_v2',
    'HLT_Photon70_CaloIdL_MHT70_v7',
    'HLT_Photon70_CaloIdL_MHT90_v2',
    'HLT_Photon75_CaloIdVL_IsoL_v7',
    'HLT_Photon75_CaloIdVL_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v4',
    'HLT_Photon90_CaloIdVL_v3',
    'HLT_Physics_v2',
    'HLT_PixelTracks_Multiplicity100_v6',
    'HLT_PixelTracks_Multiplicity80_v6',
    'HLT_QuadJet40_IsoPFTau40_v11',
    'HLT_QuadJet40_v7',
    'HLT_QuadJet45_IsoPFTau45_v6',
    'HLT_QuadJet50_Jet40_Jet30_v3',
    'HLT_QuadJet60_v6',
    'HLT_QuadJet70_v6',
    'HLT_R014_MR150_v6',
    'HLT_R020_MR150_v6',
    'HLT_R020_MR550_v6',
    'HLT_R023_MR550_v2',
    'HLT_R025_MR150_v6',
    'HLT_R025_MR450_v6',
    'HLT_R029_MR450_v2',
    'HLT_R033_MR350_v6',
    'HLT_R036_MR350_v2',
    'HLT_R038_MR250_v6',
    'HLT_R042_MR250_v2',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v6',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v8',
    'HLT_TripleMu5_v8',
    'HLT_ZeroBias_v4') ),
  OnlineHltResults = cms.vstring( 'HLTriggerFinalPath' ),
  OnlineMonitor = ( cms.vstring( 'HLT_60Jet10_v1',
    'HLT_70Jet10_v1',
    'HLT_70Jet13_v1',
    'HLT_Activity_Ecal_SC7_v7',
    'HLT_BTagMu_DiJet110_Mu5_v9',
    'HLT_BTagMu_DiJet20_Mu5_v9',
    'HLT_BTagMu_DiJet40_Mu5_v9',
    'HLT_BTagMu_DiJet70_Mu5_v9',
    'HLT_BeamGas_BSC_v4',
    'HLT_BeamGas_HF_v6',
    'HLT_BeamHalo_v5',
    'HLT_CentralJet46_CentralJet38_DiBTagIP3D_v2',
    'HLT_CentralJet60_CentralJet53_DiBTagIP3D_v1',
    'HLT_CentralJet80_MET100_v7',
    'HLT_CentralJet80_MET160_v7',
    'HLT_CentralJet80_MET65_v7',
    'HLT_CentralJet80_MET80_v6',
    'HLT_DTCalibration_v1',
    'HLT_DTErrors_v2',
    'HLT_DiCentralJet20_BTagIP_MET65_v6',
    'HLT_DiCentralJet20_MET80_v5',
    'HLT_DiJet130_PT130_v6',
    'HLT_DiJet160_PT160_v6',
    'HLT_DiJet60_MET45_v7',
    'HLT_DiJetAve110_v6',
    'HLT_DiJetAve150_v6',
    'HLT_DiJetAve190_v6',
    'HLT_DiJetAve240_v6',
    'HLT_DiJetAve300_v6',
    'HLT_DiJetAve30_v6',
    'HLT_DiJetAve370_v6',
    'HLT_DiJetAve60_v6',
    'HLT_DiJetAve80_v6',
    'HLT_Dimuon0_Jpsi_Muon_v6',
    'HLT_Dimuon0_Jpsi_NoVertexing_v2',
    'HLT_Dimuon0_Jpsi_v5',
    'HLT_Dimuon0_Upsilon_Muon_v6',
    'HLT_Dimuon0_Upsilon_v5',
    'HLT_Dimuon10_Jpsi_Barrel_v5',
    'HLT_Dimuon4_Bs_Barrel_v7',
    'HLT_Dimuon5_Upsilon_Barrel_v5',
    'HLT_Dimuon6_Bs_v6',
    'HLT_Dimuon7_Jpsi_X_Barrel_v5',
    'HLT_Dimuon7_PsiPrime_v5',
    'HLT_DoubleEle10_CaloIdL_TrkIdVL_Ele10_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleEle33_CaloIdL_v4',
    'HLT_DoubleEle33_v4',
    'HLT_DoubleEle45_CaloIdL_v3',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_HT150_v5',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_Mass4_HT150_v2',
    'HLT_DoubleEle8_CaloIdT_TrkIdVL_v2',
    'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v2',
    'HLT_DoubleJet30_ForwardBackward_v7',
    'HLT_DoubleJet60_ForwardBackward_v7',
    'HLT_DoubleJet70_ForwardBackward_v7',
    'HLT_DoubleJet80_ForwardBackward_v7',
    'HLT_DoubleMu3_HT150_v7',
    'HLT_DoubleMu3_HT200_v10',
    'HLT_DoubleMu3_Mass4_HT150_v3',
    'HLT_DoubleMu3_v9',
    'HLT_DoubleMu3p5_Jpsi_Displaced_v2',
    'HLT_DoubleMu45_v5',
    'HLT_DoubleMu4_Acoplanarity03_v8',
    'HLT_DoubleMu4_LowMass_Displaced_v2',
    'HLT_DoubleMu5_Acoplanarity03_v5',
    'HLT_DoubleMu5_Ele8_CaloIdL_TrkIdVL_v9',
    'HLT_DoubleMu5_Ele8_CaloIdT_TrkIdVL_v3',
    'HLT_DoubleMu5_IsoMu5_v7',
    'HLT_DoubleMu6_v7',
    'HLT_DoubleMu7_v7',
    'HLT_DoublePhoton33_HEVT_v3',
    'HLT_DoublePhoton38_HEVT_v2',
    'HLT_DoublePhoton40_MR150_v5',
    'HLT_DoublePhoton40_R014_MR150_v5',
    'HLT_DoublePhoton5_IsoVL_CEP_v6',
    'HLT_DoublePhoton60_v3',
    'HLT_DoublePhoton80_v1',
    'HLT_EcalCalibration_v2',
    'HLT_EightJet120_v1',
    'HLT_Ele100_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v2',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R005_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R025_MR200_v4',
    'HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R029_MR200_v2',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_PFMHT25_v3',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_HT250_v7',
    'HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v1',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v7',
    'HLT_Ele15_CaloIdVT_TrkIdT_Jet35_Jet25_Deta3_Jet20_v3',
    'HLT_Ele15_CaloIdVT_TrkIdT_TightIsoPFTau20_v2',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFT_v3',
    'HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Ele17_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele17_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v7',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_Ele8_Mass30_v6',
    'HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7',
    'HLT_Ele18_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele20_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_Jet35_Jet25_Deta3_Jet20_v1',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v4',
    'HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_v3',
    'HLT_Ele22_CaloIdVT_TrkIdT_CentralJet30_CentralJet25_v3',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_BTagIP_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TriCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_v8',
    'HLT_Ele25_CaloIdVT_TrkIdT_DiCentralJet30_v7',
    'HLT_Ele25_CaloIdVT_TrkIdT_QuadCentralJet30_v4',
    'HLT_Ele25_CaloIdVT_TrkIdT_TriCentralJet30_v7',
    'HLT_Ele27_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_PFMHT20_v1',
    'HLT_Ele27_WP80_PFMT50_v3',
    'HLT_Ele32_CaloIdT_CaloIsoT_TrkIdT_TrkIsoT_SC17_v5',
    'HLT_Ele32_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v6',
    'HLT_Ele32_WP70_PFMT50_v3',
    'HLT_Ele52_CaloIdVT_TrkIdT_v4',
    'HLT_Ele65_CaloIdVT_TrkIdT_v3',
    'HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7',
    'HLT_Ele8_CaloIdL_CaloIsoVL_v7',
    'HLT_Ele8_CaloIdL_TrkIdVL_v7',
    'HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5',
    'HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v4',
    'HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v4',
    'HLT_Ele8_v7',
    'HLT_ExclDiJet60_HFAND_v6',
    'HLT_ExclDiJet60_HFOR_v6',
    'HLT_FatJetMass300_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass350_DR1p1_Deta2p0_CentralJet30_BTagIP_v2',
    'HLT_FatJetMass750_DR1p1_Deta2p0_v1',
    'HLT_FatJetMass850_DR1p1_Deta2p0_v1',
    'HLT_GlobalRunHPDNoise_v5',
    'HLT_HT150_v8',
    'HLT_HT2000_v2',
    'HLT_HT200_AlphaT0p55_v2',
    'HLT_HT200_DoubleEle5_CaloIdVL_MassJPsi_v2',
    'HLT_HT200_v8',
    'HLT_HT250_AlphaT0p53_v6',
    'HLT_HT250_AlphaT0p55_v2',
    'HLT_HT250_DoubleDisplacedJet60_PromptTrack_v5',
    'HLT_HT250_DoubleDisplacedJet60_v7',
    'HLT_HT250_MHT100_v2',
    'HLT_HT250_MHT90_v2',
    'HLT_HT250_Mu15_PFMHT20_v7',
    'HLT_HT250_Mu15_PFMHT40_v3',
    'HLT_HT250_v8',
    'HLT_HT300_AlphaT0p53_v6',
    'HLT_HT300_AlphaT0p54_v2',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT55_v7',
    'HLT_HT300_CentralJet30_BTagIP_PFMHT75_v7',
    'HLT_HT300_CentralJet30_BTagIP_v6',
    'HLT_HT300_DoubleIsoPFTau10_Trk3_PFMHT40_v7',
    'HLT_HT300_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT40_v5',
    'HLT_HT300_MHT80_v2',
    'HLT_HT300_MHT90_v2',
    'HLT_HT300_Mu5_PFMHT40_v7',
    'HLT_HT300_PFMHT55_v7',
    'HLT_HT300_v9',
    'HLT_HT350_AlphaT0p52_v2',
    'HLT_HT350_AlphaT0p53_v7',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v7',
    'HLT_HT350_Ele5_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_PFMHT45_v5',
    'HLT_HT350_MHT70_v2',
    'HLT_HT350_MHT80_v2',
    'HLT_HT350_Mu5_PFMHT45_v7',
    'HLT_HT350_v8',
    'HLT_HT400_AlphaT0p51_v7',
    'HLT_HT400_AlphaT0p52_v2',
    'HLT_HT400_v8',
    'HLT_HT450_AlphaT0p51_v2',
    'HLT_HT450_AlphaT0p52_v2',
    'HLT_HT450_v8',
    'HLT_HT500_JetPt60_DPhi2p94_v1',
    'HLT_HT500_v8',
    'HLT_HT550_JetPt60_DPhi2p94_v1',
    'HLT_HT550_v8',
    'HLT_HT600_v1',
    'HLT_HcalCalibration_v2',
    'HLT_HcalNZS_v7',
    'HLT_HcalPhiSym_v7',
    'HLT_IsoMu12_v9',
    'HLT_IsoMu15_LooseIsoPFTau15_v8',
    'HLT_IsoMu15_LooseIsoPFTau20_v6',
    'HLT_IsoMu15_TightIsoPFTau20_v6',
    'HLT_IsoMu15_v13',
    'HLT_IsoMu17_CentralJet30_BTagIP_v9',
    'HLT_IsoMu17_CentralJet30_v5',
    'HLT_IsoMu17_DiCentralJet30_v5',
    'HLT_IsoMu17_QuadCentralJet30_v5',
    'HLT_IsoMu17_TriCentralJet30_v5',
    'HLT_IsoMu17_v13',
    'HLT_IsoMu20_DiCentralJet34_v2',
    'HLT_IsoMu20_v8',
    'HLT_IsoMu24_v8',
    'HLT_IsoMu30_v8',
    'HLT_IsoPFTau35_Trk20_MET60_v6',
    'HLT_IsoPFTau35_Trk20_MET70_v2',
    'HLT_IsoPFTau35_Trk20_v6',
    'HLT_IsoPFTau40_IsoPFTau30_Trk5_eta2p1_v2',
    'HLT_IsoTrackHB_v6',
    'HLT_IsoTrackHE_v7',
    'HLT_Jet110_v6',
    'HLT_Jet150_v6',
    'HLT_Jet190_v6',
    'HLT_Jet240_CentralJet30_BTagIP_v2',
    'HLT_Jet240_v6',
    'HLT_Jet270_CentralJet30_BTagIP_v2',
    'HLT_Jet300_v5',
    'HLT_Jet30_v6',
    'HLT_Jet370_NoJetID_v6',
    'HLT_Jet370_v6',
    'HLT_Jet60_v6',
    'HLT_Jet800_v1',
    'HLT_Jet80_v6',
    'HLT_JetE30_NoBPTX3BX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_NoHalo_v8',
    'HLT_JetE30_NoBPTX_v6',
    'HLT_JetE50_NoBPTX3BX_NoHalo_v3',
    'HLT_L1DoubleJet36Central_v4',
    'HLT_L1DoubleMu0_v4',
    'HLT_L1ETM30_v4',
    'HLT_L1MultiJet_v4',
    'HLT_L1SingleEG12_v3',
    'HLT_L1SingleEG5_v3',
    'HLT_L1SingleJet16_v4',
    'HLT_L1SingleJet36_v4',
    'HLT_L1SingleMu10_v4',
    'HLT_L1SingleMu20_v4',
    'HLT_L1SingleMuOpen_AntiBPTX_v3',
    'HLT_L1SingleMuOpen_DT_v4',
    'HLT_L1SingleMuOpen_v4',
    'HLT_L1Tech_HBHEHO_totalOR_v3',
    'HLT_L1Tech_HCAL_HF_single_channel_v1',
    'HLT_L1TrackerCosmics_v4',
    'HLT_L1_Interbunch_BSC_v3',
    'HLT_L1_PreCollisions_v3',
    'HLT_L2DoubleMu0_v7',
    'HLT_L2DoubleMu23_NoVertex_v7',
    'HLT_L2DoubleMu30_NoVertex_v3',
    'HLT_L2Mu10_v6',
    'HLT_L2Mu20_v6',
    'HLT_L2Mu60_1Hit_MET40_v5',
    'HLT_L2Mu60_1Hit_MET60_v5',
    'HLT_LogMonitor_v1',
    'HLT_MET100_HBHENoiseFiltered_v5',
    'HLT_MET100_v7',
    'HLT_MET120_HBHENoiseFiltered_v5',
    'HLT_MET120_v7',
    'HLT_MET200_HBHENoiseFiltered_v5',
    'HLT_MET200_v7')+cms.vstring( 'HLT_MET400_v2',
    'HLT_MET65_HBHENoiseFiltered_v4',
    'HLT_MET65_v4',
    'HLT_Mu100_v5',
    'HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2',
    'HLT_Mu12_DiCentralJet20_DiBTagIP3D1stTrack_v3',
    'HLT_Mu12_DiCentralJet30_BTagIP3D_v5',
    'HLT_Mu12_v7',
    'HLT_Mu13_Mu8_v6',
    'HLT_Mu15_DoublePhoton15_CaloIdL_v9',
    'HLT_Mu15_LooseIsoPFTau15_v8',
    'HLT_Mu15_Photon20_CaloIdL_v9',
    'HLT_Mu15_v8',
    'HLT_Mu17_CentralJet30_BTagIP_v9',
    'HLT_Mu17_CentralJet30_v10',
    'HLT_Mu17_DiCentralJet30_v10',
    'HLT_Mu17_Ele8_CaloIdL_v8',
    'HLT_Mu17_Ele8_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu17_Mu8_v6',
    'HLT_Mu17_QuadCentralJet30_v5',
    'HLT_Mu17_TriCentralJet30_v10',
    'HLT_Mu20_v7',
    'HLT_Mu24_v7',
    'HLT_Mu30_HT200_v3',
    'HLT_Mu30_v7',
    'HLT_Mu3_DiJet30_v6',
    'HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2',
    'HLT_Mu3_Ele8_CaloIdT_TrkIdVL_HT150_v6',
    'HLT_Mu3_QuadJet30_v6',
    'HLT_Mu3_TriJet30_v6',
    'HLT_Mu3_v9',
    'HLT_Mu40_HT200_v3',
    'HLT_Mu40_v5',
    'HLT_Mu5_DoubleEle8_CaloIdT_TrkIdVL_v3',
    'HLT_Mu5_Ele8_CaloIdT_TrkIdVL_Ele8_CaloIdL_TrkIdVL_v3',
    'HLT_Mu5_L2Mu2_Jpsi_v8',
    'HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v8',
    'HLT_Mu5_Track2_Jpsi_v8',
    'HLT_Mu5_v9',
    'HLT_Mu60_v2',
    'HLT_Mu7_Track7_Jpsi_v9',
    'HLT_Mu8_Ele17_CaloIdL_v8',
    'HLT_Mu8_Ele17_CaloIdT_CaloIsoVL_v3',
    'HLT_Mu8_Jet40_v9',
    'HLT_Mu8_Photon20_CaloIdVT_IsoT_v8',
    'HLT_Mu8_R005_MR200_v7',
    'HLT_Mu8_R025_MR200_v7',
    'HLT_Mu8_R029_MR200_v3',
    'HLT_Mu8_v7',
    'HLT_PFMHT150_v11',
    'HLT_Photon135_v1',
    'HLT_Photon200_NoHE_v3',
    'HLT_Photon20_CaloIdVL_IsoL_v6',
    'HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8',
    'HLT_Photon20_R9Id_Photon18_R9Id_v6',
    'HLT_Photon225_NoHE_v1',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_CaloIdL_IsoVL_v7',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_R9Id_v6',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_v7',
    'HLT_Photon26_IsoVL_Photon18_IsoVL_v7',
    'HLT_Photon26_IsoVL_Photon18_v7',
    'HLT_Photon26_Photon18_v6',
    'HLT_Photon26_R9Id_Photon18_CaloIdL_IsoVL_v6',
    'HLT_Photon26_R9Id_Photon18_R9Id_v3',
    'HLT_Photon30_CaloIdVL_IsoL_v7',
    'HLT_Photon30_CaloIdVL_v6',
    'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v1',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v2',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v4',
    'HLT_Photon36_CaloIdL_Photon22_CaloIdL_v5',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v1',
    'HLT_Photon36_IsoVL_Photon22_v4',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_R9Id_Photon22_R9Id_v2',
    'HLT_Photon400_v1',
    'HLT_Photon40_CaloIdL_Photon28_CaloIdL_v3',
    'HLT_Photon40_CaloIdL_R005_MR150_v4',
    'HLT_Photon40_CaloIdL_R014_MR500_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v2',
    'HLT_Photon40_CaloIdL_R020_MR350_v2',
    'HLT_Photon40_CaloIdL_R023_MR350_v2',
    'HLT_Photon40_CaloIdL_R025_MR250_v2',
    'HLT_Photon40_CaloIdL_R029_MR250_v2',
    'HLT_Photon40_CaloIdL_R038_MR200_v2',
    'HLT_Photon40_CaloIdL_R042_MR200_v2',
    'HLT_Photon44_CaloIdL_Photon34_CaloIdL_v1',
    'HLT_Photon48_CaloIdL_Photon38_CaloIdL_v1',
    'HLT_Photon50_CaloIdVL_IsoL_v6',
    'HLT_Photon50_CaloIdVL_v3',
    'HLT_Photon70_CaloIdL_HT350_v7',
    'HLT_Photon70_CaloIdL_HT400_v2',
    'HLT_Photon70_CaloIdL_MHT70_v7',
    'HLT_Photon70_CaloIdL_MHT90_v2',
    'HLT_Photon75_CaloIdVL_IsoL_v7',
    'HLT_Photon75_CaloIdVL_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v4',
    'HLT_Photon90_CaloIdVL_v3',
    'HLT_Physics_v2',
    'HLT_PixelTracks_Multiplicity100_v6',
    'HLT_PixelTracks_Multiplicity80_v6',
    'HLT_QuadJet40_IsoPFTau40_v11',
    'HLT_QuadJet40_v7',
    'HLT_QuadJet45_IsoPFTau45_v6',
    'HLT_QuadJet50_Jet40_Jet30_v3',
    'HLT_QuadJet60_v6',
    'HLT_QuadJet70_v6',
    'HLT_R014_MR150_v6',
    'HLT_R020_MR150_v6',
    'HLT_R020_MR550_v6',
    'HLT_R023_MR550_v2',
    'HLT_R025_MR150_v6',
    'HLT_R025_MR450_v6',
    'HLT_R029_MR450_v2',
    'HLT_R033_MR350_v6',
    'HLT_R036_MR350_v2',
    'HLT_R038_MR250_v6',
    'HLT_R042_MR250_v2',
    'HLT_Random_v1',
    'HLT_RegionalCosmicTracking_v6',
    'HLT_TrackerCalibration_v2',
    'HLT_TripleEle10_CaloIdL_TrkIdVL_v8',
    'HLT_TripleMu5_v8',
    'HLT_ZeroBias_v4') ),
  Photon = cms.vstring( 'HLT_DoubleEle33_CaloIdL_v4',
    'HLT_DoubleEle33_v4',
    'HLT_DoubleEle45_CaloIdL_v3',
    'HLT_DoublePhoton33_HEVT_v3',
    'HLT_DoublePhoton38_HEVT_v2',
    'HLT_DoublePhoton40_MR150_v5',
    'HLT_DoublePhoton40_R014_MR150_v5',
    'HLT_DoublePhoton5_IsoVL_CEP_v6',
    'HLT_DoublePhoton60_v3',
    'HLT_DoublePhoton80_v1',
    'HLT_Photon135_v1',
    'HLT_Photon200_NoHE_v3',
    'HLT_Photon20_CaloIdVL_IsoL_v6',
    'HLT_Photon20_R9Id_Photon18_R9Id_v6',
    'HLT_Photon225_NoHE_v1',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_CaloIdL_IsoVL_v7',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_R9Id_v6',
    'HLT_Photon26_CaloIdL_IsoVL_Photon18_v7',
    'HLT_Photon26_IsoVL_Photon18_IsoVL_v7',
    'HLT_Photon26_IsoVL_Photon18_v7',
    'HLT_Photon26_Photon18_v6',
    'HLT_Photon26_R9Id_Photon18_CaloIdL_IsoVL_v6',
    'HLT_Photon26_R9Id_Photon18_R9Id_v3',
    'HLT_Photon30_CaloIdVL_IsoL_v7',
    'HLT_Photon30_CaloIdVL_v6',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_CaloIdL_v3',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_R9Id_v2',
    'HLT_Photon36_CaloIdL_IsoVL_Photon22_v4',
    'HLT_Photon36_CaloIdL_Photon22_CaloIdL_v5',
    'HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v1',
    'HLT_Photon36_IsoVL_Photon22_v4',
    'HLT_Photon36_R9Id_Photon22_CaloIdL_IsoVL_v3',
    'HLT_Photon36_R9Id_Photon22_R9Id_v2',
    'HLT_Photon400_v1',
    'HLT_Photon40_CaloIdL_Photon28_CaloIdL_v3',
    'HLT_Photon44_CaloIdL_Photon34_CaloIdL_v1',
    'HLT_Photon48_CaloIdL_Photon38_CaloIdL_v1',
    'HLT_Photon50_CaloIdVL_IsoL_v6',
    'HLT_Photon50_CaloIdVL_v3',
    'HLT_Photon75_CaloIdVL_IsoL_v7',
    'HLT_Photon75_CaloIdVL_v6',
    'HLT_Photon90_CaloIdVL_IsoL_v4',
    'HLT_Photon90_CaloIdVL_v3' ),
  PhotonHad = cms.vstring( 'HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v1',
    'HLT_Photon40_CaloIdL_R005_MR150_v4',
    'HLT_Photon40_CaloIdL_R014_MR500_v2',
    'HLT_Photon40_CaloIdL_R017_MR500_v2',
    'HLT_Photon40_CaloIdL_R020_MR350_v2',
    'HLT_Photon40_CaloIdL_R023_MR350_v2',
    'HLT_Photon40_CaloIdL_R025_MR250_v2',
    'HLT_Photon40_CaloIdL_R029_MR250_v2',
    'HLT_Photon40_CaloIdL_R038_MR200_v2',
    'HLT_Photon40_CaloIdL_R042_MR200_v2',
    'HLT_Photon70_CaloIdL_HT350_v7',
    'HLT_Photon70_CaloIdL_HT400_v2',
    'HLT_Photon70_CaloIdL_MHT70_v7',
    'HLT_Photon70_CaloIdL_MHT90_v2' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNoHits_v6',
    'AlCa_RPCMuonNoTriggers_v6',
    'AlCa_RPCMuonNormalisation_v6' ),
  SingleElectron = cms.vstring( 'HLT_Ele100_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v2',
    'HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele27_WP80_PFMT50_v3',
    'HLT_Ele32_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4',
    'HLT_Ele32_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v6',
    'HLT_Ele32_WP70_PFMT50_v3',
    'HLT_Ele52_CaloIdVT_TrkIdT_v4',
    'HLT_Ele65_CaloIdVT_TrkIdT_v3' ),
  SingleMu = cms.vstring( 'HLT_IsoMu12_v9',
    'HLT_IsoMu15_v13',
    'HLT_IsoMu17_v13',
    'HLT_IsoMu20_v8',
    'HLT_IsoMu24_v8',
    'HLT_IsoMu30_v8',
    'HLT_L1SingleMu10_v4',
    'HLT_L1SingleMu20_v4',
    'HLT_L2Mu10_v6',
    'HLT_L2Mu20_v6',
    'HLT_Mu100_v5',
    'HLT_Mu12_v7',
    'HLT_Mu15_v8',
    'HLT_Mu20_v7',
    'HLT_Mu24_v7',
    'HLT_Mu30_v7',
    'HLT_Mu3_v9',
    'HLT_Mu40_v5',
    'HLT_Mu5_v9',
    'HLT_Mu60_v2',
    'HLT_Mu8_v7' ),
  Tau = cms.vstring( 'HLT_DoubleIsoPFTau45_Trk5_eta2p1_v2',
    'HLT_IsoPFTau35_Trk20_MET60_v6',
    'HLT_IsoPFTau35_Trk20_MET70_v2',
    'HLT_IsoPFTau35_Trk20_v6',
    'HLT_IsoPFTau40_IsoPFTau30_Trk5_eta2p1_v2' ),
  TauPlusX = cms.vstring( 'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v7',
    'HLT_Ele15_CaloIdVT_TrkIdT_TightIsoPFTau20_v2',
    'HLT_Ele18_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_TightIsoPFTau20_v2',
    'HLT_HT300_DoubleIsoPFTau10_Trk3_PFMHT40_v7',
    'HLT_HT350_DoubleIsoPFTau10_Trk3_PFMHT45_v7',
    'HLT_IsoMu15_LooseIsoPFTau15_v8',
    'HLT_IsoMu15_LooseIsoPFTau20_v6',
    'HLT_IsoMu15_TightIsoPFTau20_v6',
    'HLT_Mu15_LooseIsoPFTau15_v8' ),
  TestEnablesEcalHcalDT = cms.vstring( 'HLT_DTCalibration_v1',
    'HLT_EcalCalibration_v2',
    'HLT_HcalCalibration_v2' ),
  TestEnablesTracker = cms.vstring( 'HLT_TrackerCalibration_v2' )
)

GlobalTag = cms.ESSource( "PoolDBESSource",
  appendToDataLabel = cms.string( "" ),
  timetype = cms.string( "runnumber" ),
  connect = cms.string( "frontier://(proxyurl=http://localhost:3128)(serverurl=http://localhost:8000/FrontierOnProd)(serverurl=http://localhost:8000/FrontierOnProd)(retrieve-ziplevel=0)/CMS_COND_31X_GLOBALTAG" ),
  DumpStat = cms.untracked.bool( False ),
  BlobStreamerName = cms.untracked.string( "TBufferBlobStreamingService" ),
  globaltag = cms.string( "GR_H_V22::All" ),
  DBParameters = cms.PSet( 
    authenticationPath = cms.untracked.string( "." ),
    connectionRetrialTimeOut = cms.untracked.int32( 60 ),
    idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
    messageLevel = cms.untracked.int32( 0 ),
    enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
    enableConnectionSharing = cms.untracked.bool( True ),
    enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
    connectionTimeOut = cms.untracked.int32( 0 ),
    connectionRetrialPeriod = cms.untracked.int32( 10 )
  ),
  toGet = cms.VPSet( 
  ),
  RefreshEachRun = cms.untracked.bool( True )
)
HepPDTESSource = cms.ESSource( "HepPDTESSource",
  pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" ),
  appendToDataLabel = cms.string( "" )
)
eegeom = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalMappingRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
  toGet = cms.untracked.vstring( 'GainWidths' ),
  appendToDataLabel = cms.string( "" )
)
hltESSAK5CaloL2L3 = cms.ESSource( "JetCorrectionServiceChain",
  appendToDataLabel = cms.string( "" ),
  correctors = cms.vstring( 'hltESSL2RelativeCorrectionService',
    'hltESSL3AbsoluteCorrectionService' ),
  label = cms.string( "hltESSAK5CaloL2L3" )
)
hltESSBTagRecord = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "JetTagComputerRecord" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
  recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
  iovIsRunNotTime = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  firstValid = cms.vuint32( 1 )
)
hltESSL2RelativeCorrectionService = cms.ESSource( "LXXXCorrectionService",
  appendToDataLabel = cms.string( "" ),
  level = cms.string( "L2Relative" ),
  algorithm = cms.string( "AK5Calo" ),
  section = cms.string( "" ),
  era = cms.string( "" ),
  useCondDB = cms.untracked.bool( True )
)
hltESSL3AbsoluteCorrectionService = cms.ESSource( "LXXXCorrectionService",
  appendToDataLabel = cms.string( "" ),
  level = cms.string( "L3Absolute" ),
  algorithm = cms.string( "AK5Calo" ),
  section = cms.string( "" ),
  era = cms.string( "" ),
  useCondDB = cms.untracked.bool( True )
)
magfield = cms.ESSource( "XMLIdealGeometryESSource",
  rootNodeName = cms.string( "cmsMagneticField:MAGF" ),
  appendToDataLabel = cms.string( "" ),
  geomXMLFiles = cms.vstring( 'Geometry/CMSCommonData/data/normal/cmsextent.xml',
    'Geometry/CMSCommonData/data/cms.xml',
    'Geometry/CMSCommonData/data/cmsMagneticField.xml',
    'MagneticField/GeomBuilder/data/MagneticFieldVolumes_1103l.xml',
    'MagneticField/GeomBuilder/data/MagneticFieldParameters_07_2pi.xml' )
)

CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.6 )
  )
)
hltESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( 10.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 3 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  appendToDataLabel = cms.string( "" )
)
hltIter4ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter4ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 6 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 0 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.6 )
  )
)
hltIter4ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter4ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter4ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter4ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  minNrOfHitsForRebuild = cms.untracked.int32( 4 )
)
hltIter4ESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter4ESPPixelLayerPairs" ),
  layerList = cms.vstring( 'TIB1+TIB2' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 2 )
  ),
  TID = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 2 )
  ),
  TIB = cms.PSet(  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ) ),
  TOB = cms.PSet(  )
)
hltIter4ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter4ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  skipClusters = cms.InputTag( "hltIter4ClustersRefRemoval" ),
  stripClusterProducer = cms.string( "hltIter4SiStripClusters" ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  appendToDataLabel = cms.string( "" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  inactiveStripDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  )
)
hltIter3ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter3ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 0 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.6 )
  )
)
hltIter3ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter3ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter3ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter3ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter3ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter3ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
  stripClusterProducer = cms.string( "hltIter3SiStripClusters" ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  appendToDataLabel = cms.string( "" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  inactiveStripDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  )
)
hltIter3ESPLayerTripletsB = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter3ESPLayerTripletsB" ),
  layerList = cms.vstring( 'BPix2+BPix3+TIB1',
    'BPix2+BPix3+TIB2',
    'BPix1+BPix3+TIB1',
    'BPix1+BPix3+TIB2',
    'BPix1+TIB1+TIB2',
    'BPix2+TIB1+TIB2',
    'BPix3+TIB1+TIB2' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ) ),
  TOB = cms.PSet(  )
)
hltIter3ESPLayerTripletsA = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter3ESPLayerTripletsA" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix3+FPix1_pos+TID1_pos',
    'BPix3+FPix1_neg+TID1_neg',
    'FPix1_pos+FPix2_pos+TEC1_pos',
    'FPix1_neg+FPix2_neg+TEC1_neg',
    'FPix2_pos+TID3_pos+TEC1_pos',
    'FPix2_neg+TID3_neg+TEC1_neg',
    'FPix2_pos+TEC2_pos+TEC3_pos',
    'FPix2_neg+TEC2_neg+TEC3_neg' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter3ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 2 )
  ),
  TID = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 2 )
  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltIter2ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter2ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.9 )
  )
)
hltIter2ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter2ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter2ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter2ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter2ESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter2ESPPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltIter2ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter2ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  skipClusters = cms.InputTag( "hltIter2ClustersRefRemoval" ),
  stripClusterProducer = cms.string( "hltIter2SiStripClusters" ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  appendToDataLabel = cms.string( "" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  inactiveStripDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  )
)
hltIter1ESPTrajectoryFilterIT = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltIter1ESPTrajectoryFilterIT" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 100 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.3 )
  )
)
hltIter1ESPTrajectoryBuilderIT = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltIter1ESPTrajectoryBuilderIT" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltIter1ESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltIter1ESPTrajectoryFilterIT" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltIter1ESPPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltIter1ESPPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0060 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0027 )
  ),
  FPix = cms.PSet( 
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    hitErrorRZ = cms.double( 0.0036 ),
    useErrorsFromParam = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
    hitErrorRPhi = cms.double( 0.0051 )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltIter1ESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltIter1ESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  skipClusters = cms.InputTag( "hltIter1ClustersRefRemoval" ),
  stripClusterProducer = cms.string( "hltIter1SiStripClusters" ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  appendToDataLabel = cms.string( "" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  inactiveStripDetectorLabels = cms.VInputTag(  ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  )
)
AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
AutoMagneticFieldESProducer = cms.ESProducer( "AutoMagneticFieldESProducer",
  label = cms.untracked.string( "" ),
  valueOverride = cms.int32( -1 ),
  appendToDataLabel = cms.string( "" ),
  nominalCurrents = cms.untracked.vint32( -1, 0, 9558, 14416, 16819, 18268, 19262 ),
  mapLabels = cms.untracked.vstring( '090322_3_8t',
    '0t',
    '071212_2t',
    '071212_3t',
    '071212_3_5t',
    '090322_3_8t',
    '071212_4t' )
)
CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( True ),
  useCentreTIOffsets = cms.bool( False ),
  useDDD = cms.bool( False ),
  applyAlignment = cms.bool( True )
)
CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  appendToDataLabel = cms.string( "" ),
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder",
  appendToDataLabel = cms.string( "" )
)
CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  appendToDataLabel = cms.string( "" )
)
CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True )
)
EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder",
  appendToDataLabel = cms.string( "" )
)
EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  appendToDataLabel = cms.string( "" )
)
EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True )
)
EcalUnpackerWorkerESProducer = cms.ESProducer( "EcalUnpackerWorkerESProducer",
  ComponentName = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  DCCDataUnpacker = cms.PSet( 
    tccUnpacking = cms.bool( False ),
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    srpUnpacking = cms.bool( False ),
    syncCheck = cms.bool( False ),
    feIdCheck = cms.bool( True ),
    headerUnpacking = cms.bool( True ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    feUnpacking = cms.bool( True ),
    forceKeepFRData = cms.bool( False ),
    memUnpacking = cms.bool( True )
  ),
  ElectronicsMapper = cms.PSet( 
    numbXtalTSamples = cms.uint32( 10 ),
    numbTriggerTSamples = cms.uint32( 1 )
  ),
  UncalibRHAlgo = cms.PSet(  Type = cms.string( "EcalUncalibRecHitWorkerWeights" ) ),
  CalibRHAlgo = cms.PSet( 
    flagsMapDBReco = cms.vint32( 0, 0, 0, 0, 4, -1, -1, -1, 4, 4, 7, 7, 7, 8, 9 ),
    Type = cms.string( "EcalRecHitWorkerSimple" ),
    killDeadChannels = cms.bool( True ),
    ChannelStatusToBeExcluded = cms.vint32( 10, 11, 12, 13, 14 ),
    laserCorrection = cms.bool( False )
  )
)
HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  appendToDataLabel = cms.string( "" )
)
MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
MuonNumberingInitialization = cms.ESProducer( "MuonNumberingInitialization",
  appendToDataLabel = cms.string( "" )
)
OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  useDDD = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  AutomaticNormalization = cms.bool( False ),
  NormalizationFactor = cms.double( 1.0 ),
  printDebug = cms.untracked.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  Record = cms.string( "SiStripApvGainRcd" ),
      NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" )
    ),
    cms.PSet(  Record = cms.string( "SiStripApvGain2Rcd" ),
      NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" )
    )
  )
)
SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  PrintDebugOutput = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  UseEmptyRunInfo = cms.bool( False ),
  ReduceGranularity = cms.bool( False ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  )
)
SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
SlaveField0 = cms.ESProducer( "UniformMagneticFieldESProducer",
  ZFieldInTesla = cms.double( 0.0 ),
  label = cms.untracked.string( "slave_0" ),
  appendToDataLabel = cms.string( "" )
)
SlaveField20 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_20" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "2_0T" ) )
)
SlaveField30 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_30" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_0T" ) )
)
SlaveField35 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_35" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_5T" ) )
)
SlaveField38 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_38" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "3_8T" ) )
)
SlaveField40 = cms.ESProducer( "ParametrizedMagneticFieldProducer",
  label = cms.untracked.string( "slave_40" ),
  version = cms.string( "OAE_1103l_071212" ),
  appendToDataLabel = cms.string( "" ),
  parameters = cms.PSet(  BValue = cms.string( "4_0T" ) )
)
SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "anyDirection" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
StripCPEfromTrackAngleESProducer = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "StripCPEfromTrackAngle" ),
  appendToDataLabel = cms.string( "" ),
  TanDiffusionAngle = cms.double( 0.01 ),
  ThicknessRelativeUncertainty = cms.double( 0.02 ),
  NoiseThreshold = cms.double( 2.3 ),
  MaybeNoiseThreshold = cms.double( 3.5 ),
  UncertaintyScaling = cms.double( 1.42 ),
  MinimumUncertainty = cms.double( 0.01 )
)
TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( True ),
  fromDDD = cms.bool( False )
)
TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" ),
  appendToDataLabel = cms.string( "" )
)
VBF0 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "0t" ),
  version = cms.string( "grid_1103l_071212_2t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_0" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF20 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_2t" ),
  version = cms.string( "grid_1103l_071212_2t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_20" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF30 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_3t" ),
  version = cms.string( "grid_1103l_071212_3t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_30" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF35 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_3_5t" ),
  version = cms.string( "grid_1103l_071212_3_5t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_35" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF38 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "090322_3_8t" ),
  version = cms.string( "grid_1103l_090322_3_8t" ),
  overrideMasterSector = cms.bool( False ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_38" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32( 14100, 14200, 17600, 17800, 17900, 18100, 18300, 18400, 18600, 23100, 23300, 23400, 23600, 23800, 23900, 24100, 28600, 28800, 28900, 29100, 29300, 29400, 29600, 28609, 28809, 28909, 29109, 29309, 29409, 29609, 28610, 28810, 28910, 29110, 29310, 29410, 29610, 28611, 28811, 28911, 29111, 29311, 29411, 29611 ),
  scalingFactors = cms.vdouble( 1.0, 1.0, 0.994, 1.004, 1.004, 1.005, 1.004, 1.004, 0.994, 0.965, 0.958, 0.958, 0.953, 0.958, 0.958, 0.965, 0.918, 0.924, 0.924, 0.906, 0.924, 0.924, 0.918, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991, 0.991, 0.998, 0.998, 0.978, 0.998, 0.998, 0.991 ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
VBF40 = cms.ESProducer( "VolumeBasedMagneticFieldESProducer",
  label = cms.untracked.string( "071212_4t" ),
  version = cms.string( "grid_1103l_071212_4t" ),
  overrideMasterSector = cms.bool( True ),
  useParametrizedTrackerField = cms.bool( True ),
  paramLabel = cms.string( "slave_40" ),
  appendToDataLabel = cms.string( "" ),
  scalingVolumes = cms.vint32(  ),
  scalingFactors = cms.vdouble(  ),
  findVolumeTolerance = cms.double( 0.0 ),
  cacheLastVolume = cms.untracked.bool( True )
)
XMLFromDBSource = cms.ESProducer( "XMLIdealGeometryESProducer",
  rootDDName = cms.string( "cms:OCMS" ),
  label = cms.string( "Extended" ),
  appendToDataLabel = cms.string( "" )
)
ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  appendToDataLabel = cms.string( "" ),
  applyAlignment = cms.bool( False )
)
caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  appendToDataLabel = cms.string( "" )
)
ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  includeBadChambers = cms.bool( False )
)
ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  appendToDataLabel = cms.string( "" ),
  flagMask = cms.vuint32( 1, 34, 896, 4, 49152, 6232 ),
  dbstatusMask = cms.vuint32( 1, 2046, 0, 0, 0, 64512 ),
  timeThresh = cms.double( 2.0 )
)
hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  SeverityLevels = cms.VPSet( 
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HSCP_R1R2',
  'HSCP_FracLeader',
  'HSCP_OuterEnergy',
  'HSCP_ExpFit',
  'ADCSaturationBit' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
  'HFDigiTime',
  'HBHEPulseShape',
  'HOBit',
  'HFInTimeWindow',
  'ZDCBit',
  'CalibrationBit',
  'TimingErrorBit' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring( 'HFLongShort',
  'HFS8S1Ratio',
  'HFPET' ),
      ChannelStatus = cms.vstring(  ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellHot' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  RecHitFlags = cms.vstring(  ),
      ChannelStatus = cms.vstring( 'HcalCellOff',
        'HcalCellDead' ),
      Level = cms.int32( 20 )
    )
  ),
  RecoveredRecHitBits = cms.vstring( 'TimingAddedBit',
    'TimingSubtractedBit' ),
  appendToDataLabel = cms.string( "" ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' )
)
hcal_db_producer = cms.ESProducer( "HcalDbProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  MaxDPhi = cms.double( 1.6 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2EstimatorForRefit = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2EstimatorForRefit" ),
  MaxChi2 = cms.double( 100000.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPChi2MeasurementEstimator = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator" ),
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkf3HitTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPCkf3HitTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkf3HitTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkf3HitTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPCkf3HitTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 3 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.9 )
  )
)
hltESPCkfTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPCkfTrajectoryFilter" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
hltESPCkfTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPCkfTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 5 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.9 )
  )
)
hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" ),
  appendToDataLabel = cms.string( "" )
)
hltESPESUnpackerWorker = cms.ESProducer( "ESUnpackerWorkerESProducer",
  ComponentName = cms.string( "hltESPESUnpackerWorker" ),
  appendToDataLabel = cms.string( "" ),
  DCCDataUnpacker = cms.PSet(  LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ) ),
  RHAlgo = cms.PSet( 
    ESRecoAlgo = cms.int32( 0 ),
    Type = cms.string( "ESRecHitWorker" )
  )
)
hltESPEcalRegionCablingESProducer = cms.ESProducer( "EcalRegionCablingESProducer",
  appendToDataLabel = cms.string( "" ),
  esMapping = cms.PSet(  LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ) )
)
hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" ),
  appendToDataLabel = cms.string( "" )
)
hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "anyDirection" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( True ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( True ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPHIPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPHIPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPHIPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPHIPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltHISiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPHITTRHBuilderWithoutRefit = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPHITTRHBuilderWithoutRefit" ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "Fake" ),
  Matcher = cms.string( "Fake" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinNumberOfHits = cms.int32( 5 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterial" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterial" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" ),
  appendToDataLabel = cms.string( "" )
)
hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Regional = cms.bool( True ),
  OnDemand = cms.bool( True ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  SiStripQualityLabel = cms.string( "" ),
  switchOffPixelsIfEmpty = cms.bool( True ),
  pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
  skipClusters = cms.InputTag( "" ),
  stripClusterProducer = cms.string( "hltSiStripClusters" ),
  stripLazyGetterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
  appendToDataLabel = cms.string( "" ),
  inactivePixelDetectorLabels = cms.VInputTag(  ),
  inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
  badStripCuts = cms.PSet( 
    TID = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TOB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TEC = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    ),
    TIB = cms.PSet( 
      maxConsecutiveBad = cms.uint32( 9999 ),
      maxBad = cms.uint32( 9999 )
    )
  )
)
hltESPMixedLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPMixedLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg',
    'FPix2_pos+TEC1_pos',
    'FPix2_pos+TEC2_pos',
    'TEC1_pos+TEC2_pos',
    'TEC2_pos+TEC3_pos',
    'FPix2_neg+TEC1_neg',
    'FPix2_neg+TEC2_neg',
    'TEC1_neg+TEC2_neg',
    'TEC2_neg+TEC3_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet( 
    useRingSlector = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    minRing = cms.int32( 1 ),
    maxRing = cms.int32( 1 )
  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPMuTrackJpsiTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPMuTrackJpsiTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuTrackJpsiTrajectoryFilter" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPMuTrackJpsiTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPMuTrackJpsiTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 5 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 8 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 1.0 )
  )
)
hltESPMuonCkfTrajectoryBuilder = cms.ESProducer( "MuonCkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonCkfTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  useSeedLayer = cms.bool( False ),
  rescaleErrorIfFail = cms.double( 1.0 ),
  deltaEta = cms.double( 0.1 ),
  deltaPhi = cms.double( 0.1 ),
  appendToDataLabel = cms.string( "" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( False ),
  alwaysUseInvalidHits = cms.bool( True )
)
hltESPMuonCkfTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPMuonCkfTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    chargeSignificance = cms.double( -1.0 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( -1 ),
    maxConsecLostHits = cms.int32( 1 ),
    minimumNumberOfHits = cms.int32( 5 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.9 )
  )
)
hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
  appendToDataLabel = cms.string( "" )
)
hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( False ),
  DoCosmics = cms.bool( False ),
  LoadTemplatesFromDB = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  TanLorentzAnglePerTesla = cms.double( 0.106 ),
  PixelErrorParametrization = cms.string( "NOTcmsim" ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 )
)
hltESPPixelLayerPairs = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerPairs" ),
  layerList = cms.vstring( 'BPix1+BPix2',
    'BPix1+BPix3',
    'BPix2+BPix3',
    'BPix1+FPix1_pos',
    'BPix1+FPix1_neg',
    'BPix1+FPix2_pos',
    'BPix1+FPix2_neg',
    'BPix2+FPix1_pos',
    'BPix2+FPix1_neg',
    'BPix2+FPix2_pos',
    'BPix2+FPix2_neg',
    'FPix1_pos+FPix2_pos',
    'FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTriplets = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTriplets" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3',
    'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTripletsHITHB = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTripletsHITHB" ),
  layerList = cms.vstring( 'BPix1+BPix2+BPix3' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPixelLayerTripletsHITHE = cms.ESProducer( "SeedingLayersESProducer",
  appendToDataLabel = cms.string( "" ),
  ComponentName = cms.string( "hltESPPixelLayerTripletsHITHE" ),
  layerList = cms.vstring( 'BPix1+BPix2+FPix1_pos',
    'BPix1+BPix2+FPix1_neg',
    'BPix1+FPix1_pos+FPix2_pos',
    'BPix1+FPix1_neg+FPix2_neg' ),
  BPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0060 ),
    hitErrorRPhi = cms.double( 0.0027 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  FPix = cms.PSet( 
    hitErrorRZ = cms.double( 0.0036 ),
    hitErrorRPhi = cms.double( 0.0051 ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    HitProducer = cms.string( "hltSiPixelRecHits" ),
    useErrorsFromParam = cms.bool( True )
  ),
  TEC = cms.PSet(  ),
  TID = cms.PSet(  ),
  TIB = cms.PSet(  ),
  TOB = cms.PSet(  )
)
hltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  impactParameterType = cms.int32( 0 ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 ),
  maxImpactParameter = cms.double( 0.03 ),
  deltaRmin = cms.double( 0.0 )
)
hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Mass = cms.double( 0.105 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPSiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSmartPropagatorOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  appendToDataLabel = cms.string( "" )
)
hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  appendToDataLabel = cms.string( "" ),
  distance = cms.double( 0.5 )
)
hltESPSoftLeptonByPt = cms.ESProducer( "LeptonTaggerByPtESProducer",
  appendToDataLabel = cms.string( "" ),
  ipSign = cms.string( "any" )
)
hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useInTeslaFromMagField = cms.bool( False ),
  SetVBFPointer = cms.bool( False ),
  useMagVolumes = cms.bool( True ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  ApplyRadX0Correction = cms.bool( True ),
  AssumeNoMaterial = cms.bool( False ),
  NoErrorPropagation = cms.bool( False ),
  debug = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  returnTangentPlane = cms.bool( True ),
  sendLogWarning = cms.bool( False ),
  useTuningForL2Speed = cms.bool( False ),
  useEndcapShiftsInZ = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  appendToDataLabel = cms.string( "" )
)
hltESPStraightLinePropagator = cms.ESProducer( "StraightLinePropagatorESProducer",
  ComponentName = cms.string( "hltESPStraightLinePropagator" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  StripCPE = cms.string( "StripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrackCounting3D1st = cms.ESProducer( "TrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  nthTrack = cms.int32( 1 ),
  impactParameterType = cms.int32( 0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 5.0 ),
  maximumDistanceToJetAxis = cms.double( 0.07 ),
  trackQualityClass = cms.string( "any" )
)
hltESPTrackCounting3D2nd = cms.ESProducer( "TrackCountingESProducer",
  appendToDataLabel = cms.string( "" ),
  nthTrack = cms.int32( 2 ),
  impactParameterType = cms.int32( 0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 5.0 ),
  maximumDistanceToJetAxis = cms.double( 0.07 ),
  trackQualityClass = cms.string( "any" )
)
hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryBuilderL3 = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPTrajectoryBuilderL3" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPTrajectoryFilterL3" ),
  maxCand = cms.int32( 5 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  appendToDataLabel = cms.string( "" ),
  fractionShared = cms.double( 0.5 ),
  allowSharedFirstHit = cms.bool( False )
)
hltESPTrajectoryFilterL3 = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFilterL3" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 5 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 1000000000 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 0.5 )
  )
)
hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
hltESPbJetRegionalTrajectoryBuilder = cms.ESProducer( "CkfTrajectoryBuilderESProducer",
  ComponentName = cms.string( "hltESPbJetRegionalTrajectoryBuilder" ),
  updator = cms.string( "hltESPKFUpdator" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator" ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  trajectoryFilterName = cms.string( "hltESPbJetRegionalTrajectoryFilter" ),
  maxCand = cms.int32( 1 ),
  lostHitPenalty = cms.double( 30.0 ),
  intermediateCleaning = cms.bool( True ),
  alwaysUseInvalidHits = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
hltESPbJetRegionalTrajectoryFilter = cms.ESProducer( "TrajectoryFilterESProducer",
  ComponentName = cms.string( "hltESPbJetRegionalTrajectoryFilter" ),
  appendToDataLabel = cms.string( "" ),
  filterPset = cms.PSet( 
    minimumNumberOfHits = cms.int32( 5 ),
    minHitsMinPt = cms.int32( 3 ),
    ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
    maxLostHits = cms.int32( 1 ),
    maxNumberOfHits = cms.int32( 8 ),
    maxConsecLostHits = cms.int32( 1 ),
    chargeSignificance = cms.double( -1.0 ),
    nSigmaMinPt = cms.double( 5.0 ),
    minPt = cms.double( 1.0 )
  )
)
hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False )
)
muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  includeBadChambers = cms.bool( False )
)
navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  appendToDataLabel = cms.string( "" )
)
preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  appendToDataLabel = cms.string( "" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  includeBadChambers = cms.bool( False )
)
siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer",
  appendToDataLabel = cms.string( "" )
)
sistripconn = cms.ESProducer( "SiStripConnectivity" )

DQM = cms.Service( "DQM",
)
DQMStore = cms.Service( "DQMStore",
)
DTDataIntegrityTask = cms.Service( "DTDataIntegrityTask",
  getSCInfo = cms.untracked.bool( True ),
  fedIntegrityFolder = cms.untracked.string( "DT/FEDIntegrity_EvF" ),
  processingMode = cms.untracked.string( "HLT" )
)
FUShmDQMOutputService = cms.Service( "FUShmDQMOutputService",
  lumiSectionsPerUpdate = cms.double( 1.0 ),
  useCompression = cms.bool( True ),
  compressionLevel = cms.int32( 1 ),
)
MessageLogger = cms.Service( "MessageLogger",
  destinations = cms.untracked.vstring( 'warnings',
    'errors',
    'infos',
    'debugs',
    'cout',
    'cerr' ),
  categories = cms.untracked.vstring( 'FwkJob',
    'FwkReport',
    'FwkSummary',
    'Root_NoDictionary' ),
  statistics = cms.untracked.vstring( 'cerr' ),
  cerr = cms.untracked.PSet( 
    INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    noTimeStamps = cms.untracked.bool( False ),
    FwkReport = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 0 )
    ),
    default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
    Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkSummary = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 10000000 )
    ),
    threshold = cms.untracked.string( "INFO" ),
  ),
  cout = cms.untracked.PSet( 
    threshold = cms.untracked.string( "ERROR" ),
  ),
  errors = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
  ),
  warnings = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
  ),
  infos = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    placeholder = cms.untracked.bool( True ),
  ),
  debugs = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
  ),
  fwkJobReports = cms.untracked.vstring( 'FrameworkJobReport' ),
  FrameworkJobReport = cms.untracked.PSet( 
    default = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) )
  ),
  suppressWarning = cms.untracked.vstring( 'hltL3MuonsOIState',
    'hltPixelVertices3DbbPhi',
    'hltSiPixelDigis',
    'hltPixelTracksForHighMult',
    'hltSiPixelClusters',
    'hltLightPFTracks',
    'hltPixelTracks',
    'hltOnlineBeamSpot',
    'hltL3MuonsOIHit',
    'hltHITPixelTracksHE',
    'hltHITPixelTracksHB',
    'hltL3MuonsIOHit' ),
  threshold = cms.untracked.string( "INFO" ),
  suppressError = cms.untracked.vstring( 'hltL3MuonsIOHit' )
)
MicroStateService = cms.Service( "MicroStateService",
)
ModuleWebRegistry = cms.Service( "ModuleWebRegistry",
)
PrescaleService = cms.Service( "PrescaleService",
  lvl1DefaultLabel = cms.untracked.string( "1e33" ),
  lvl1Labels = cms.vstring( '3e33',
    '2.5e33',
    '2e33',
    '1.4e33',
    '1e33',
    '7e32',
    '5e32',
    'Cosmics',
    'Cosmics + High Random' ),
  prescaleTable = cms.VPSet( 
    cms.PSet(  pathName = cms.string( "HLT_Activity_Ecal_SC7_v7" ),
      prescales = cms.vuint32( 75, 65, 50, 35, 25, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet16_v4" ),
      prescales = cms.vuint32( 50, 50, 50, 50, 50, 50, 50, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet36_v4" ),
      prescales = cms.vuint32( 500, 500, 500, 500, 500, 500, 500, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet30_v6" ),
      prescales = cms.vuint32( 32, 32, 32, 32, 32, 32, 32, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet60_v6" ),
      prescales = cms.vuint32( 180, 180, 180, 180, 180, 180, 180, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet80_v6" ),
      prescales = cms.vuint32( 2400, 2400, 2400, 2400, 48000, 33600, 24000, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet110_v6" ),
      prescales = cms.vuint32( 720, 720, 720, 5040, 3600, 2520, 1800, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet150_v6" ),
      prescales = cms.vuint32( 225, 190, 150, 100, 70, 50, 35, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet190_v6" ),
      prescales = cms.vuint32( 60, 50, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Jet240_v6" ),
      prescales = cms.vuint32( 20, 18, 14, 9, 7, 4, 3, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve30_v6" ),
      prescales = cms.vuint32( 16, 16, 16, 16, 16, 16, 16, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve60_v6" ),
      prescales = cms.vuint32( 90, 90, 90, 90, 90, 90, 90, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve80_v6" ),
      prescales = cms.vuint32( 1200, 1200, 1200, 1200, 24000, 16800, 12000, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve110_v6" ),
      prescales = cms.vuint32( 360, 360, 360, 2520, 1800, 1260, 900, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve150_v6" ),
      prescales = cms.vuint32( 105, 90, 70, 50, 35, 25, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve190_v6" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJetAve240_v6" ),
      prescales = cms.vuint32( 10, 9, 6, 4, 3, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FatJetMass300_DR1p1_Deta2p0_CentralJet30_BTagIP_v2" ),
      prescales = cms.vuint32( 20, 150, 120, 85, 60, 40, 30, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FatJetMass350_DR1p1_Deta2p0_CentralJet30_BTagIP_v2" ),
      prescales = cms.vuint32( 10, 75, 60, 40, 30, 20, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleJet30_ForwardBackward_v7" ),
      prescales = cms.vuint32( 50, 40, 30, 20, 15, 10, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJet130_PT130_v6" ),
      prescales = cms.vuint32( 15, 15, 15, 110, 75, 50, 35, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CentralJet80_MET65_v7" ),
      prescales = cms.vuint32( 210, 180, 140, 100, 70, 50, 35, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJet60_MET45_v7" ),
      prescales = cms.vuint32( 24, 24, 24, 24, 24, 24, 240, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CentralJet46_CentralJet38_DiBTagIP3D_v2" ),
      prescales = cms.vuint32( 1, 1, 10, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadJet40_v7" ),
      prescales = cms.vuint32( 210, 210, 210, 150, 110, 70, 50, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadJet40_IsoPFTau40_v11" ),
      prescales = cms.vuint32( 20, 15, 10, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadJet60_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_JetE30_NoBPTX_v6" ),
      prescales = cms.vuint32( 24, 24, 24, 24, 24, 24, 120, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_JetE30_NoBPTX_NoHalo_v8" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_JetE30_NoBPTX3BX_NoHalo_v8" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT150_v8" ),
      prescales = cms.vuint32( 3580, 3580, 3580, 25100, 17900, 12600, 8950, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT200_v8" ),
      prescales = cms.vuint32( 210, 1800, 1440, 1010, 720, 510, 360, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT200_AlphaT0p55_v2" ),
      prescales = cms.vuint32( 2, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT200_DoubleEle5_CaloIdVL_MassJPsi_v2" ),
      prescales = cms.vuint32( 115, 95, 75, 50, 35, 25, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT250_v8" ),
      prescales = cms.vuint32( 870, 725, 580, 410, 290, 210, 150, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT300_v9" ),
      prescales = cms.vuint32( 450, 375, 300, 210, 150, 110, 75, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT300_PFMHT55_v7" ),
      prescales = cms.vuint32( 20, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT300_CentralJet30_BTagIP_v6" ),
      prescales = cms.vuint32( 40, 35, 25, 15, 10, 8, 6, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT350_v8" ),
      prescales = cms.vuint32( 300, 250, 200, 140, 100, 70, 50, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT400_v8" ),
      prescales = cms.vuint32( 150, 125, 100, 70, 50, 35, 25, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT450_v8" ),
      prescales = cms.vuint32( 45, 40, 30, 20, 15, 10, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT500_v8" ),
      prescales = cms.vuint32( 20, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET65_v4" ),
      prescales = cms.vuint32( 330, 275, 220, 160, 110, 75, 55, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET65_HBHENoiseFiltered_v4" ),
      prescales = cms.vuint32( 330, 275, 220, 160, 110, 75, 55, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET100_v7" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET100_HBHENoiseFiltered_v5" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_R014_MR150_v6" ),
      prescales = cms.vuint32( 4500, 3750, 3000, 2100, 1500, 1050, 750, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_R020_MR150_v6" ),
      prescales = cms.vuint32( 1800, 1600, 1290, 910, 650, 460, 330, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_R025_MR150_v6" ),
      prescales = cms.vuint32( 660, 550, 440, 310, 220, 160, 110, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMuOpen_v4" ),
      prescales = cms.vuint32( 620, 620, 620, 620, 620, 620, 620, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMuOpen_DT_v4" ),
      prescales = cms.vuint32( 75, 75, 75, 75, 75, 75, 75, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu10_v4" ),
      prescales = cms.vuint32( 96000, 82000, 64000, 44800, 32000, 22400, 16000, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu20_v4" ),
      prescales = cms.vuint32( 48000, 40000, 32000, 22400, 16000, 11200, 8000, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleMu0_v4" ),
      prescales = cms.vuint32( 20000, 17000, 12860, 9010, 6430, 4510, 3220, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu10_v6" ),
      prescales = cms.vuint32( 14000, 12000, 9160, 6420, 4580, 3210, 2290, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu20_v6" ),
      prescales = cms.vuint32( 6900, 5750, 4600, 3220, 2300, 1610, 1150, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2DoubleMu0_v7" ),
      prescales = cms.vuint32( 6000, 5000, 4000, 2800, 2000, 1400, 1000, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_v9" ),
      prescales = cms.vuint32( 440, 440, 440, 440, 440, 440, 440, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu5_v9" ),
      prescales = cms.vuint32( 320, 320, 320, 320, 320, 320, 320, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_v7" ),
      prescales = cms.vuint32( 120, 120, 120, 120, 120, 120, 120, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_v7" ),
      prescales = cms.vuint32( 450, 450, 450, 12600, 9000, 6300, 4500, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_v8" ),
      prescales = cms.vuint32( 1080, 900, 720, 510, 360, 260, 180, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_v7" ),
      prescales = cms.vuint32( 390, 325, 260, 190, 130, 90, 65, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu24_v7" ),
      prescales = cms.vuint32( 240, 200, 160, 120, 80, 55, 40, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu30_v7" ),
      prescales = cms.vuint32( 120, 100, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu12_v9" ),
      prescales = cms.vuint32( 150, 150, 150, 4200, 3000, 2100, 1500, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu15_v13" ),
      prescales = cms.vuint32( 170, 140, 110, 75, 55, 40, 25, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu17_v13" ),
      prescales = cms.vuint32( 300, 250, 200, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_v8" ),
      prescales = cms.vuint32( 50, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_v9" ),
      prescales = cms.vuint32( 780, 650, 520, 370, 260, 190, 130, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu6_v7" ),
      prescales = cms.vuint32( 80, 75, 60, 40, 30, 20, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu7_v7" ),
      prescales = cms.vuint32( 50, 45, 35, 25, 15, 10, 8, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Acoplanarity03_v8" ),
      prescales = cms.vuint32( 200, 150, 105, 70, 50, 35, 25, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3p5_Jpsi_Displaced_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_v5" ),
      prescales = cms.vuint32( 120, 100, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_v2" ),
      prescales = cms.vuint32( 180, 150, 120, 55, 40, 40, 30, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_v5" ),
      prescales = cms.vuint32( 120, 100, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon7_Jpsi_X_Barrel_v5" ),
      prescales = cms.vuint32( 0, 0, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu5_TkMu0_OST_Jpsi_Tight_B5Q7_v8" ),
      prescales = cms.vuint32( 4, 4, 4, 5, 4, 3, 8, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu5_L2Mu2_Jpsi_v8" ),
      prescales = cms.vuint32( 240, 200, 160, 120, 80, 55, 40, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu5_Track2_Jpsi_v8" ),
      prescales = cms.vuint32( 6, 6, 6, 6, 6, 6, 6, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_Track7_Jpsi_v9" ),
      prescales = cms.vuint32( 1, 1, 1, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon20_CaloIdVL_IsoL_v6" ),
      prescales = cms.vuint32( 135, 135, 5370, 3760, 2690, 1880, 1350, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon20_R9Id_Photon18_R9Id_v6" ),
      prescales = cms.vuint32( 1, 1, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon20_CaloIdVT_IsoT_Ele8_CaloIdL_CaloIsoVL_v8" ),
      prescales = cms.vuint32( 45, 37, 30, 20, 15, 10, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon26_Photon18_v6" ),
      prescales = cms.vuint32( 1100, 900, 720, 510, 360, 260, 180, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon26_IsoVL_Photon18_v7" ),
      prescales = cms.vuint32( 330, 270, 220, 160, 110, 75, 55, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon26_CaloIdL_IsoVL_Photon18_v7" ),
      prescales = cms.vuint32( 120, 100, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon30_CaloIdVL_v6" ),
      prescales = cms.vuint32( 4200, 3600, 2880, 2020, 1440, 1010, 720, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon30_CaloIdVL_IsoL_v7" ),
      prescales = cms.vuint32( 1620, 1400, 1080, 760, 540, 380, 270, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon36_IsoVL_Photon22_v4" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon36_CaloIdVL_Photon22_CaloIdVL_v1" ),
      prescales = cms.vuint32( 140, 120, 90, 60, 45, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon36_CaloIdL_Photon22_CaloIdL_v5" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon36_CaloIdL_IsoVL_Photon22_v4" ),
      prescales = cms.vuint32( 45, 40, 30, 20, 15, 10, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_CaloIdVL_v3" ),
      prescales = cms.vuint32( 540, 460, 360, 260, 180, 130, 90, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_CaloIdVL_IsoL_v6" ),
      prescales = cms.vuint32( 260, 220, 170, 120, 85, 60, 40, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_CaloIdVL_v6" ),
      prescales = cms.vuint32( 90, 75, 60, 40, 30, 20, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_CaloIdVL_IsoL_v7" ),
      prescales = cms.vuint32( 35, 30, 21, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon90_CaloIdVL_v3" ),
      prescales = cms.vuint32( 45, 40, 30, 20, 15, 10, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon90_CaloIdVL_IsoL_v4" ),
      prescales = cms.vuint32( 20, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePhoton33_HEVT_v3" ),
      prescales = cms.vuint32( 25, 20, 15, 10, 7, 5, 3, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleEG5_v3" ),
      prescales = cms.vuint32( 1740, 1740, 1740, 1740, 1740, 1740, 1740, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleEG12_v3" ),
      prescales = cms.vuint32( 220, 220, 8580, 6010, 4290, 3010, 2150, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_v7" ),
      prescales = cms.vuint32( 240, 240, 240, 240, 240, 240, 240, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdL_CaloIsoVL_v7" ),
      prescales = cms.vuint32( 40, 40, 40, 40, 40, 40, 40, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdL_TrkIdVL_v7" ),
      prescales = cms.vuint32( 20, 20, 20, 20, 20, 20, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdT_CaloIsoVL_TrkIdVL_TrkIsoVL_v5" ),
      prescales = cms.vuint32( 20, 20, 20, 20, 20, 20, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_CaloIdT_CaloIsoVL_TrkIdT_TrkIsoVL_v1" ),
      prescales = cms.vuint32( 15, 15, 500, 350, 250, 175, 125, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v7" ),
      prescales = cms.vuint32( 600, 500, 400, 280, 200, 140, 100, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdL_CaloIsoVL_v7" ),
      prescales = cms.vuint32( 110, 110, 4320, 3030, 2160, 1520, 1080, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdL_CaloIsoVL_Ele8_CaloIdL_CaloIsoVL_v8" ),
      prescales = cms.vuint32( 40, 35, 25, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdVT_CaloIsoVT_TrkIdT_TrkIsoVT_SC8_Mass30_v7" ),
      prescales = cms.vuint32( 1, 1, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdL_CaloIsoVL_Ele15_HFL_v8" ),
      prescales = cms.vuint32( 25, 20, 15, 10, 7, 5, 3, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4" ),
      prescales = cms.vuint32( 660, 550, 440, 310, 220, 160, 110, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele27_WP80_PFMT50_v3" ),
      prescales = cms.vuint32( 20, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele32_CaloIdVL_CaloIsoVL_TrkIdVL_TrkIsoVL_v4" ),
      prescales = cms.vuint32( 500, 440, 330, 240, 170, 120, 80, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele32_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_v6" ),
      prescales = cms.vuint32( 90, 75, 60, 40, 30, 20, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele52_CaloIdVT_TrkIdT_v4" ),
      prescales = cms.vuint32( 5, 4, 3, 2, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle33_v4" ),
      prescales = cms.vuint32( 25, 20, 15, 10, 7, 5, 3, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoPFTau35_Trk20_v6" ),
      prescales = cms.vuint32( 11, 11, 11, 11, 11, 11, 11, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_DiJet20_Mu5_v9" ),
      prescales = cms.vuint32( 35, 35, 35, 500, 380, 270, 190, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_DiJet40_Mu5_v9" ),
      prescales = cms.vuint32( 15, 15, 15, 110, 75, 50, 35, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_DiJet70_Mu5_v9" ),
      prescales = cms.vuint32( 5, 5, 5, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_DiJet110_Mu5_v9" ),
      prescales = cms.vuint32( 1, 1, 1, 2, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_Ele8_CaloIdT_CaloIsoVL_v2" ),
      prescales = cms.vuint32( 15, 15, 100, 70, 50, 35, 25, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_R005_MR200_v7" ),
      prescales = cms.vuint32( 120, 100, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_DiJet30_v6" ),
      prescales = cms.vuint32( 715, 715, 715, 5010, 3580, 2510, 1790, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_TriJet30_v6" ),
      prescales = cms.vuint32( 60, 60, 60, 420, 300, 210, 150, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_QuadJet30_v6" ),
      prescales = cms.vuint32( 7, 7, 7, 50, 35, 25, 18, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_Ele17_CaloIdL_v8" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_Jet40_v9" ),
      prescales = cms.vuint32( 220, 220, 220, 1540, 1100, 770, 550, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_LooseIsoPFTau15_v8" ),
      prescales = cms.vuint32( 110, 90, 70, 50, 35, 25, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_CentralJet30_v10" ),
      prescales = cms.vuint32( 390, 325, 260, 190, 130, 90, 65, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_DiCentralJet30_v10" ),
      prescales = cms.vuint32( 180, 150, 120, 85, 60, 40, 30, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TriCentralJet30_v10" ),
      prescales = cms.vuint32( 60, 50, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DiCentralJet30_BTagIP3D_v5" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DiCentralJet20_BTagIP3D1stTrack_v2" ),
      prescales = cms.vuint32( 30, 25, 20, 15, 10, 5, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_CentralJet30_BTagIP_v9" ),
      prescales = cms.vuint32( 60, 50, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu17_CentralJet30_v5" ),
      prescales = cms.vuint32( 42, 35, 28, 20, 15, 9, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon40_CaloIdL_R005_MR150_v4" ),
      prescales = cms.vuint32( 390, 330, 260, 190, 130, 90, 65, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdT_TrkIdT_DiJet30_v4" ),
      prescales = cms.vuint32( 2000, 1700, 1275, 900, 640, 450, 320, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdT_TrkIdT_TriJet30_v4" ),
      prescales = cms.vuint32( 375, 320, 250, 180, 130, 85, 60, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdT_TrkIdT_QuadJet30_v4" ),
      prescales = cms.vuint32( 60, 50, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdL_CaloIsoVL_Jet40_v7" ),
      prescales = cms.vuint32( 2, 2, 2, 2, 2, 2, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele10_CaloIdL_CaloIsoVL_TrkIdVL_TrkIsoVL_R005_MR200_v4" ),
      prescales = cms.vuint32( 220, 180, 140, 100, 70, 50, 35, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_CaloIdVT_TrkIdT_TightIsoPFTau20_v2" ),
      prescales = cms.vuint32( 75, 65, 50, 35, 25, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_v8" ),
      prescales = cms.vuint32( 260, 220, 170, 120, 85, 60, 40, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_TrkIdT_DiCentralJet30_v7" ),
      prescales = cms.vuint32( 60, 50, 40, 30, 20, 15, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_TrkIdT_TriCentralJet30_v7" ),
      prescales = cms.vuint32( 20, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_v4" ),
      prescales = cms.vuint32( 120, 100, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_DiCentralJet30_v4" ),
      prescales = cms.vuint32( 24, 20, 16, 10, 8, 5, 4, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele25_CaloIdVT_TrkIdT_CentralJet30_BTagIP_v8" ),
      prescales = cms.vuint32( 12, 10, 8, 5, 4, 2, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_CaloIdVT_TrkIdT_Jet35_Jet25_Deta3_Jet20_v3" ),
      prescales = cms.vuint32( 1, 1, 15, 10, 7, 5, 3, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele22_CaloIdVT_TrkIdT_CentralJet30_CentralJet25_v3" ),
      prescales = cms.vuint32( 2, 2, 80, 55, 40, 30, 20, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele22_CaloIdVT_CaloIsoT_TrkIdT_TrkIsoT_CentralJet30_CentralJet25_v3" ),
      prescales = cms.vuint32( 1, 1, 20, 15, 10, 7, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon30_CaloIdVT_CentralJet20_BTagIP_v1" ),
      prescales = cms.vuint32( 15, 13, 10, 7, 5, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity80_v6" ),
      prescales = cms.vuint32( 20, 15, 10, 7, 5, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1_PreCollisions_v3" ),
      prescales = cms.vuint32( 5, 5, 5, 5, 5, 5, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1_Interbunch_BSC_v3" ),
      prescales = cms.vuint32( 100, 100, 100, 100, 100, 100, 100, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoTrackHE_v7" ),
      prescales = cms.vuint32( 3, 3, 3, 20, 15, 10, 5, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoTrackHB_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 7, 3, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HcalPhiSym_v7" ),
      prescales = cms.vuint32( 15, 15, 15, 15, 15, 15, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HcalNZS_v7" ),
      prescales = cms.vuint32( 15, 15, 15, 15, 15, 15, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_GlobalRunHPDNoise_v5" ),
      prescales = cms.vuint32( 1500, 1500, 1500, 1500, 1500, 1500, 1500, 40, 40 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1Tech_HCAL_HF_single_channel_v1" ),
      prescales = cms.vuint32( 500, 500, 500, 350, 250, 175, 125, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_v4" ),
      prescales = cms.vuint32( 50, 50, 50, 50, 50, 50, 50, 50, 50 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_v2" ),
      prescales = cms.vuint32( 8000, 8000, 8000, 8000, 8000, 8000, 8000, 80, 80 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_NanoDST_v2" ),
      prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_v1" ),
      prescales = cms.vuint32( 600, 600, 600, 600, 600, 600, 600, 100, 10000 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1ETM30_v4" ),
      prescales = cms.vuint32( 6000, 5000, 3870, 2710, 1940, 1360, 970, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleJet36Central_v4" ),
      prescales = cms.vuint32( 1000, 1000, 23160, 16300, 11600, 8110, 5790, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MultiJet_v4" ),
      prescales = cms.vuint32( 9000, 7500, 5790, 4060, 2900, 2030, 1450, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalPi0_v9" ),
      prescales = cms.vuint32( 2, 2, 2, 2, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalEta_v8" ),
      prescales = cms.vuint32( 2, 2, 2, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_RPCMuonNoTriggers_v6" ),
      prescales = cms.vuint32( 12, 10, 8, 6, 4, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_RPCMuonNoHits_v6" ),
      prescales = cms.vuint32( 12, 10, 8, 6, 4, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_RPCMuonNormalisation_v6" ),
      prescales = cms.vuint32( 12, 10, 8, 6, 4, 3, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "DQM_FEDIntegrity_v5" ),
      prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLTDQMResultsOutput" ),
      prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLTMONOutput" ),
      prescales = cms.vuint32( 100, 100, 100, 100, 100, 100, 100, 100, 100 )
    )
  )
)
UpdaterService = cms.Service( "UpdaterService",
)

